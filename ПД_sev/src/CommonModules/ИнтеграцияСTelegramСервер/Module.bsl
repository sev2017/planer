Функция ОбработатьЗапросТелеграм(ЗапросHTML) Экспорт 
	Перем ЗначениеВозврата;
	СтрокаЗапросТело =ЗапросHTML.ПолучитьТелоКакСтроку();
	Если ПустаяСтрока(СтрокаЗапросТело) Тогда
		Возврат ЗначениеВозврата;
	КонецЕсли;
	ОБъектJson = ОбщегоНазначения.ПолучитьОбъектИзJsonТекста(СтрокаЗапросТело,,Истина);
	Если ОБъектJson = Неопределено Тогда
		РаботаСЭлектроннойПочтойСервер.ОтправитьПочтовоеСообщение("Ошибка обработки запроса Телеграм", СтрокаЗапросТело, "sev@snail.ru", "1cbot@gks-service.ru"); 	
		Возврат ЗначениеВозврата;	
	КонецЕсли;
	
	стрUpdates = getUpdatesОбОтв(ОБъектJson); 
	булПользовательЗарегистрирован = ПроверитьРегистрациюПользователя(стрUpdates);
	Если Не булПользовательЗарегистрирован Тогда
		булКодАктивацииВерен = Ложь;
		Если Не ПустаяСтрока(стрUpdates.text) Тогда
			булКодАктивацииВерен = ПроверитьКодАктивации(стрUpdates);
		КонецЕсли;
		Если Не булКодАктивацииВерен Тогда
			СообщениеПользователю(стрUpdates, "Необходимо ввести код активации!");
			Возврат ЗначениеВозврата;
		КонецЕсли;	
	КонецЕсли;
	ЗаписатьСообщениевЛог(стрUpdates);
	ОтветПользователю = СформироватьОтветПользователю(стрUpdates);
КонецФункции // ОбработатьЗапросТелеграм()

Процедура ЗаписатьСообщениевЛог(стрUpdates)
	МенеджерЗаписи = РегистрыСведений.СообщенияTelegram.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, стрUpdates);
	МенеджерЗаписи.Записать();	

КонецПроцедуры
	
Функция СообщениеПользователю(стрUpdates, ТекстОтвета, СтруктураСообщения = Неопределено, стрФайл = Неопределено, ФорматТекста = "") Экспорт 
	Результат = Истина;
	Сервер = "api.telegram.org";
	ИмяФайлаДляЗапроса = "";
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type","application/json");
	
	
	
	СтрокаТело = "";
	Если СтруктураСообщения = Неопределено Тогда
		СтруктураСообщения = Новый Структура;
		СтруктураСообщения.Вставить("chat_id", Формат(стрUpdates.id,"ЧГ="));	
		СтруктураСообщения.Вставить("text" ,ТекстОтвета);
		Если Не ПустаяСтрока(ФорматТекста) Тогда
			СтруктураСообщения.Вставить("parse_mode", ФорматТекста);	
		КонецЕсли;
	КонецЕсли;
	Если Не стрФайл = Неопределено Тогда
		Если стрФайл.ТипФайла = "Изображение" Тогда 
			Команда = "sendPhoto";
			ТипФайла = "photo";
		Иначе	
			Команда = "sendDocument";
			ТипФайла = "document";
		КонецЕсли;
		Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()),"-","");
		Заголовки.Вставить("Content-Type","multipart/form-data; boundary="+Boundary);
		//Заголовки.Вставить("Connection", "keep-alive");

		ИмяФайлаДляЗапроса  = ИнтеграцияСВнешнимиСистемамиСервер.ПолучитьТекстФайлаОтправки(Boundary, стрФайл.ИмяФайлаОтправки,СтруктураСообщения, стрФайл.ИмяФайлаБезРасширения, ТипФайла, стрФайл.Подпись);
		//ИмяФайлаДляЗапроса  = ИнтеграцияСВнешнимиСистемамиСервер.ПолучитьТекстФайлаОтправкиV2(Boundary, стрФайл.ИмяФайлаОтправки,СтруктураСообщения, стрФайл.ИмяФайлаБезРасширения);
	Иначе
		Команда = "sendMessage";
		СтрокаТело = ОбщегоНазначения.ПолучитьJsonСтрокуИзОбъекта(СтруктураСообщения);	
	КонецЕсли;
	Ресурс = "bot"+ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("TelegramТокен")+"/"+Команда;
	Ответ = ИнтеграцияСВнешнимиСистемамиСервер.ПолучитьДанныеССервера("POST", Сервер, Ресурс, Истина, СтрокаТело, Заголовки, 40,,, ИмяФайлаДляЗапроса);
	
	ОБъектJson = ОбщегоНазначения.ПолучитьОбъектИзJsonТекста(Ответ,,Истина);
	Если Не ОБъектJson = Неопределено Тогда
		ok = ОБъектJson.Получить("ok");
		Если ok = Ложь Тогда
			Сообщить(ОБъектJson["description"]);
			РаботаСЭлектроннойПочтойСервер.ОтправитьПисьмоОбОшибке("Ошибка отправки сообщения в Телеграм", ОБъектJson["description"]);
			Результат = Ложь;
		КонецЕсли;
	Иначе
		Сообщить("Не удалось прочитать ответ сервера, сообщение не отправлено!" + Символы.ПС + Ответ);
		Результат = Ложь;
	КонецЕсли;
	Возврат Результат
КонецФункции

Функция getUpdatesОбОтв(стрОтвет)
		Перем СтрТаб;

	СтрТаб = Новый Структура;
	//СтрТаб.Вставить("update_id", стрОтвет["update_id"]);
	Сообщение = стрОтвет["message"];
	
	СтрТаб.Вставить("update_id", стрОтвет["update_id"]);
	СтрТаб.Вставить("date", МестноеВремя(Дата('19700101')+Сообщение["date"]));
	СтрТаб.Вставить("text", Сообщение["text"]);
	СтрТаб.Вставить("message_id", Сообщение["message_id"]);
	СтрТаб.Вставить("first_name", Сообщение["from"]["first_name"]);
	СтрТаб.Вставить("last_name", Сообщение["from"]["last_name"]);
	СтрТаб.Вставить("username", Сообщение["from"]["username"]);
	СтрТаб.Вставить("id", Сообщение["from"]["id"]);
	Если НЕ Сообщение.Получить("location") = Неопределено Тогда
		СтрТаб.Вставить("Координаты", Новый Структура("Широта, Долгота", СтрЗаменить(Сообщение["location"]["latitude"], ",", "."), СтрЗаменить(Сообщение["location"]["longitude"], ",", ".")));			
	КонецЕсли;
	Если НЕ Сообщение.Получить("photo") = Неопределено Тогда
		Фото = Сообщение["photo"];
		КоличествоКартинок = Фото.Количество();
		стрФото = Новый Структура;
		стрФото.Вставить("Тип", "Изображение");
		стрФото.Вставить("Иконка", Фото[0]["file_id"]);
		стрФото.Вставить("Оригинал", Фото[КоличествоКартинок - 1]["file_id"]);
		СтрТаб.Вставить("Фото", стрФото); 	
	ИначеЕсли Не Сообщение.Получить("document") = Неопределено Тогда
		Документ = Сообщение["document"];
		стрФото = Новый Структура;
		стрФото.Вставить("Тип", "Документ");
		стрФото.Вставить("Оригинал", Документ["file_id"]);
		СтрТаб.Вставить("Фото", стрФото); 	
	КонецЕсли; 
	Возврат СтрТаб;		
КонецФункции

Функция ПолучитьДвоичныеДанныеФото(ИдентификаторФото)
	Перем ЗначениеВозврата;
	Сервер = "api.telegram.org";
	ПараметрыЗапросаGetFile = "/bot"+ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("TelegramТокен")+"/getFile";
	ПараметрыЗапросаFile = "/file/bot"+ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("TelegramТокен")+"/";
	//Для Каждого Фото ИЗ стрФото Цикл 
	ПутьДоКартинки = "";
	Результат = Истина;
	СтрокаЗапроса = "file_id=" + ИдентификаторФото; 
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Ответ = ИнтеграцияСВнешнимиСистемамиСервер.ПолучитьДанныеССервера("POST", Сервер, ПараметрыЗапросаGetFile, Истина, СтрокаЗапроса, Заголовки);
	Если Не Ответ = Неопределено Тогда		
		ОБъектJson = ОбщегоНазначения.ПолучитьОбъектИзJsonТекста(Ответ,,Истина);
		Если Не ОБъектJson = Неопределено Тогда
			ok = ОБъектJson.Получить("ok");
			Если ok = Ложь Тогда
				Сообщить(ОБъектJson["description"]);
				РаботаСЭлектроннойПочтойСервер.ОтправитьПисьмоОбОшибке("Ошибка Ошибка получения фотографии в Телеграм", ИдентификаторФото + Символы.ПС + ОБъектJson["description"]);
				Результат = Ложь;
			Иначе
				result = ОБъектJson["result"];
				ПутьДоКартинки = ОБъектJson["result"]["file_path"];
			КонецЕсли;
		Иначе
			Сообщить("Не удалось прочитать ответ сервера, сообщение не отправлено!" + Символы.ПС + Ответ);
			Результат = Ложь;
		КонецЕсли;
	Иначе				
		РаботаСЭлектроннойПочтойСервер.ОтправитьПисьмоОбОшибке("Ошибка получения ссылки для скачивания фотографии в Телеграм", ИдентификаторФото + Символы.ПС + ОБъектJson["description"]);
		Результат = Ложь;		
	КонецЕсли;
	Если Результат И Не ПустаяСтрока(ПутьДоКартинки) Тогда		
		ОтветДвоичныеДанные = ИнтеграцияСВнешнимиСистемамиСервер.ПолучитьДанныеССервера("GET", Сервер, ПараметрыЗапросаFile + ПутьДоКартинки, Истина,,,,,,, Истина);
		Если Не ОтветДвоичныеДанные = Неопределено Тогда 
			//ОтветДвоичныеДанные.Записать("C:\Temp\" + ИдентификаторФото + ".jpg");
			ЗначениеВозврата = Новый Структура("ДвоичныеДанные, ИмяФайла", ОтветДвоичныеДанные, ПутьДоКартинки);
		Иначе
			РаботаСЭлектроннойПочтойСервер.ОтправитьПисьмоОбОшибке("Ошибка получения фотографии в Телеграм", ИдентификаторФото + Символы.ПС + "Ссылка для скачивания " +
			Символы.ПС + Сервер + "/" + ПараметрыЗапросаGetFile + ПутьДоКартинки + Символы.ПС + ОБъектJson["description"]);
			//Результат = Ложь;				
		КонецЕсли;
	КонецЕсли;
	//КонецЦикла;
	Возврат ЗначениеВозврата;
КонецФункции

Функция ПроверитьРегистрациюПользователя(стрUpdates)
	Результат = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК Ссылка,
	               |	Пользователи.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.ПометкаУдаления
	               |	И НЕ Пользователи.ТелеграмИД = """"
	               |	И Пользователи.ТелеграмИД = &ТелеграмИД";
	Запрос.УстановитьПараметр("ТелеграмИД", стрUpdates.id);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		стрUpdates.Вставить("Пользователь", Выборка.Ссылка);
		стрUpdates.Вставить("Сотрудник", Выборка.Сотрудник);
	    Результат = Истина;
	КонецЕсли;
	
	Возврат Результат
	
КонецФункции

Функция ПроверитьКодАктивации(стрUpdates)
	Результат = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.ПометкаУдаления
	               |	И НЕ Пользователи.ТелеграмКодАктивации = """"
	               |	И Пользователи.ТелеграмКодАктивации = &ТелеграмКодАктивации";
	Запрос.УстановитьПараметр("ТелеграмКодАктивации", Лев(стрUpdates.text, 10));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		стрUpdates.Вставить("Пользователь", Выборка.Ссылка);
		ПользовательОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ПользовательОбъект.ТелеграмКодАктивации = "";
		ПользовательОбъект.ТелеграмИД = стрUpdates.id;
		ПользовательОбъект.Записать();
	    Результат = Истина;
	КонецЕсли;
	
	Возврат Результат
	
КонецФункции
	
Функция ПолучитьТекущееМенюПользователя(Пользователь)
	Перем ЗначениеВозврата;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТелеграмТекущееМеню.ТекущийУровень КАК ТекущийУровень,
	               |	ТелеграмТекущееМеню.Параметры КАК Параметры
	               |ИЗ
	               |	РегистрСведений.ТелеграмТекущееМеню КАК ТелеграмТекущееМеню
	               |ГДЕ
	               |	ТелеграмТекущееМеню.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		//ЗначениеВозврата = Новый Структура;
		//ЗначениеВозврата.Вставить("ТекущийУровень", Выборка.ТекущийУровень);
		//ЗначениеВозврата.Вставить("Параметры", Выборка.Параметры.Получить());	
		ЗначениеВозврата = Выборка.ТекущийУровень; 
	КонецЕсли;

	Возврат ЗначениеВозврата;	
КонецФункции // ПОлучитьТекущееМенюПользователя(стрUpdates.Пользователь)()

Функция ПолучитьПараметрыТекущегоМенюПользователя(Пользователь)
	Перем ЗначениеВозврата;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТелеграмТекущееМеню.ТекущийУровень КАК ТекущийУровень,
	               |	ТелеграмТекущееМеню.Параметры КАК Параметры
	               |ИЗ
	               |	РегистрСведений.ТелеграмТекущееМеню КАК ТелеграмТекущееМеню
	               |ГДЕ
	               |	ТелеграмТекущееМеню.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		//ЗначениеВозврата = Новый Структура;
		//ЗначениеВозврата.Вставить("ТекущийУровень", Выборка.ТекущийУровень);
		//ЗначениеВозврата.Вставить("Параметры", Выборка.Параметры.Получить());	
		ЗначениеВозврата = Выборка.Параметры.Получить(); 
	КонецЕсли;

	Возврат ЗначениеВозврата;	
КонецФункции // ПОлучитьТекущееМенюПользователя(стрUpdates.Пользователь)()

Функция УстановитьТекущееМенюПользователя(ТекущийУровень, стрUpdates)
	НаборЗаписей = РегистрыСведений.ТелеграмТекущееМеню.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(стрUpdates.Пользователь);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		Запись = НаборЗаписей[0]; 
	Иначе
		Запись = НаборЗаписей.Добавить();
		стрПараметры = Новый Структура;
		Запись.Параметры = Новый ХранилищеЗначения(стрПараметры, Новый СжатиеДанных(9));
	КонецЕсли;
	Запись.Пользователь = стрUpdates.Пользователь;
	Запись.ТекущийУровень = ТекущийУровень; 
	
	НаборЗаписей.Записать();
КонецФункции // УстановитьТекущееМенюПользователя(КомандаСправочник, стрUpdates)()

Функция ЗаписатьПараметрыТекущегоМеню(Пользователь, ТекущийУровень, стрПараметры)
	НаборЗаписей = РегистрыСведений.ТелеграмТекущееМеню.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Пользователь);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		Запись = НаборЗаписей[0]; 
	Иначе
		Запись = НаборЗаписей.Добавить();
	КонецЕсли;
	Запись.Пользователь = Пользователь;
	Запись.ТекущийУровень = ТекущийУровень; 
	Запись.Параметры = Новый ХранилищеЗначения(стрПараметры, Новый СжатиеДанных(9));
	
	НаборЗаписей.Записать();
КонецФункции // УстановитьТекущееМенюПользователя(КомандаСправочник, стрUpdates)()

Процедура ОбнулитьТекущееМенюПользователя(стрUpdates)
	НаборЗаписей = РегистрыСведений.ТелеграмТекущееМеню.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(стрUpdates.Пользователь);
	НаборЗаписей.Записать();
КонецПроцедуры

Функция ПроверитьПравоНаВыполнениеКоманды(ТекущееМеню, Пользователь)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТелеграмСвязьРолейДоступа.РольДоступа КАК РольДоступа
	               |ПОМЕСТИТЬ РолиПользователя
	               |ИЗ
	               |	РегистрСведений.ТелеграмСвязьРолейДоступа КАК ТелеграмСвязьРолейДоступа
	               |ГДЕ
	               |	ТелеграмСвязьРолейДоступа.Пользователь = &Пользователь
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТелеграмКоманды.Наименование КАК Команда
	               |ИЗ
	               |	Справочник.ТелеграмКоманды КАК ТелеграмКоманды
	               |ГДЕ
	               |	ТелеграмКоманды.Ссылка = &ТекущееМеню
	               |	И НЕ ТелеграмКоманды.ПометкаУдаления
	               |	И ТелеграмКоманды.РолиДоступа.Роль В
	               |			(ВЫБРАТЬ
	               |				РолиПользователя.РольДоступа
	               |			ИЗ
	               |				РолиПользователя КАК РолиПользователя)";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ТекущееМеню", ?(ТекущееМеню = Неопределено, ПредопределенноеЗначение("Справочник.ТелеграмКоманды.ПустаяСсылка"), ТекущееМеню));
	Выборка = Запрос.Выполнить().Выбрать();

	Результат = Выборка.Следующий();	
	Возврат Результат;
КонецФункции
			   		   
Функция ПолучитьСтруктуруМеню(ТекущееМеню, стрUpdates, МассивКнопок, ТекстОтвета)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТелеграмСвязьРолейДоступа.РольДоступа КАК РольДоступа
	               |ПОМЕСТИТЬ РолиПользователя
	               |ИЗ
	               |	РегистрСведений.ТелеграмСвязьРолейДоступа КАК ТелеграмСвязьРолейДоступа
	               |ГДЕ
	               |	ТелеграмСвязьРолейДоступа.Пользователь = &Пользователь
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТелеграмКоманды.Наименование КАК Команда
	               |ИЗ
	               |	Справочник.ТелеграмКоманды КАК ТелеграмКоманды
	               |ГДЕ
	               |	ТелеграмКоманды.Родитель = &ТекущееМеню
	               |	И НЕ ТелеграмКоманды.ПометкаУдаления
	               |	И ТелеграмКоманды.РолиДоступа.Роль В
	               |			(ВЫБРАТЬ
	               |				РолиПользователя.РольДоступа
	               |			ИЗ
	               |				РолиПользователя КАК РолиПользователя)";
	Запрос.УстановитьПараметр("Пользователь", стрUpdates.Пользователь);
	Запрос.УстановитьПараметр("ТекущееМеню", ?(ТекущееМеню = Неопределено, ПредопределенноеЗначение("Справочник.ТелеграмКоманды.ПустаяСсылка"), ТекущееМеню));
	//Выборка = Запрос.Выполнить().Выбрать();
	ТЗДанные = Запрос.Выполнить().Выгрузить(); 
	МассивДанные = ТЗДанные.ВыгрузитьКолонку("Команда"); 
	Если МассивДанные.Количество() = 0 Тогда
		ТекстОтвета = "Нет Доступных Команд!";
	Иначе
		МассивКнопок = СформироватьМассивКоманд(,МассивДанные, 2);	
		ТекстОтвета = ТекстОтвета + Символы.ПС + Символы.ПС + "Выберите команду:";
	КонецЕсли;
КонецФункции

Функция ОбработатьКомандуВыдатьДеньги(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню)
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	Если Не Параметры.Свойство("Сотрудник") И Лев(Команда,3) = "/С-" Тогда
		ИмяСотрудника = Прав(Команда, СтрДлина(Команда) - 3);
		Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ИмяСотрудника, Истина);	
		Если Не Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Параметры.Вставить("Сотрудник", Сотрудник);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Введите комментарий:";
		Иначе
			ТекстСообщения = "Не удалось найти сотрудника " + ИмяСотрудника;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Сотрудник") Тогда
		МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
		МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 2); 
		ТекстСообщения = "Выберите сотрудника которому будут выданы деньги:";
	ИначеЕсли Не Параметры.Свойство("Комментарий") Тогда
			Параметры.Вставить("Комментарий", Команда);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Введите Сумму:";
	Иначе
		Сумма = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		Если Сумма = 0 Тогда
	    	ТекстСообщения = "Введены некорректные данные, " + Команда + " не является числом!" + Символы.ПС + "Используйте числовую клавиатуру для ввода.";
		Иначе
			стрПараметры = Новый Структура;
			стрПараметры.Вставить("Комментарий", Параметры.Комментарий);
			стрПараметры.Вставить("Автор", стрUpdates.Пользователь);
			стрПараметры.Вставить("Сотрудник", Параметры.Сотрудник);
			стрПараметры.Вставить("Сумма", Сумма);
			СсылкаДокумент = Документы.ВыплатаНачислений.СоздатьДокументПрограммно(стрПараметры);		
			ТекстСообщения = "Для сотрудника " + Параметры.Сотрудник + " создан документ " + СсылкаДокумент + " на сумму " + Сумма;
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			//ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
			булПоказатьНачальноеМеню = Истина;
		КонецЕсли;
	КонецЕсли;

КонецФункции // ОбработатьКомандуВыдатьДеньги(ТекущееМеню)()

Функция ОбработатьКомандуРабочееВремя(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню)
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	МассивРолейПользователя = Справочники.ТелеграмРолиДоступа.ПолучитьМассивРолейПользователя(стрUpdates.Пользователь);
	МассивДоступныхПроектов = Справочники.Сотрудники.ПолучитьМассивДоступныхПроектов(стрUpdates.Сотрудник);
	Если МассивРолейПользователя.Найти("Руководитель") = Неопределено 
		И МассивРолейПользователя.Найти("Полные права") = Неопределено Тогда
		Параметры.Вставить("Сотрудник", стрUpdates.Сотрудник);	
	КонецЕсли;	
	Если Не Параметры.Свойство("Проект") И Лев(Команда,3) = "/П-" Тогда
		ИмяПроекта = Прав(Команда, СтрДлина(Команда) - 3);
		Проект = Справочники.Проекты.НайтиПоНаименованию(ИмяПроекта, Истина);	
		Если Не Проект = Справочники.Проекты.ПустаяСсылка() Тогда
			Параметры.Вставить("Проект", Проект);	
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
			Если Параметры.Свойство("Сотрудник") Тогда
				ТекстСообщения = "Укажите время начала выполнения задачи:";
				МассивКоманд = Новый Массив;
				МассивКоманд.Добавить(Новый Структура("text, request_location", "Начать", Истина));
				МассивКоманд.Добавить("Указать время");
				МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1);		
			Иначе
				МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
				МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 1); 
				ТекстСообщения = "Выберите сотрудника:";				
			КонецЕсли;
			
		Иначе
			ТекстСообщения = "Не удалось найти проект " + ИмяПроекта;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Проект") Тогда
		Если МассивДоступныхПроектов.Количество() = 1 Тогда
			Параметры.Вставить("Проект", МассивДоступныхПроектов[0]);	
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);	
			Если Параметры.Свойство("Сотрудник") Тогда
				ТекстСообщения = "Укажите время начала выполнения задачи:";
				МассивКоманд = Новый Массив;
				МассивКоманд.Добавить(Новый Структура("text, request_location", "Начать", Истина));
				МассивКоманд.Добавить("Указать время");
				МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1);		
			Иначе
				МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
				МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 1); 
				ТекстСообщения = "Выберите сотрудника:";				
			КонецЕсли;			
		ИначеЕсли МассивДоступныхПроектов.Количество() > 0 Тогда
			МассивКнопок = СформироватьМассивКоманд("/П-", МассивДоступныхПроектов, 1); 
			ТекстСообщения = "Выберите проект:";			
		Иначе
			МассивПроектов = Справочники.Проекты.ПолучитьМассивПроектов();
			МассивКнопок = СформироватьМассивКоманд("/П-", МассивПроектов, 1); 
			ТекстСообщения = "Выберите проект:";
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Сотрудник") И Лев(Команда,3) = "/С-" Тогда
		ИмяСотрудника = Прав(Команда, СтрДлина(Команда) - 3);
		Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ИмяСотрудника, Истина);	
		Если Не Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Параметры.Вставить("Сотрудник", Сотрудник);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Укажите время начала выполнения задачи:";
			МассивКоманд = Новый Массив;
			МассивКоманд.Добавить(Новый Структура("text, request_location", "Начать", Истина));
			МассивКоманд.Добавить("Указать время");
			МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1);
		Иначе
			ТекстСообщения = "Не удалось найти сотрудника " + ИмяСотрудника;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Сотрудник") Тогда
		МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
		МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 2); 
		ТекстСообщения = "Выберите сотрудника:";
	ИначеЕсли Не Параметры.Свойство("НачалоПериода") Тогда
		Если Команда = Неопределено Тогда
			//Дата = ТекущаяДата();
			Дата =  дата('00010101') + (ТекущаяДата()-НачалоДня(ТекущаяДата()));
			КоординатыНачала = стрUpdates.Координаты; 
			КоординатыНачала.Вставить("Дата", ТекущаяДата());
			Параметры.Вставить("КоординатыНачала", КоординатыНачала);
		ИначеЕсли Команда = "/Указать время" Тогда
			ТекстСообщения = "Введите время начала работы в формате час:минута(например 10:15)";
			Возврат Неопределено;			
		Иначе	
			ДатаСтрокой = "01.01.0001 " + Команда + ":00";
			Дата = ОбщегоНазначения.ПривестиСтрокуКДате(ДатаСтрокой);			
		КонецЕсли;
		Если ЗначениеЗаполнено(Дата) Тогда
			Параметры.Вставить("НачалоПериода", Дата);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Введите время завершения задачи:";
			МассивКоманд = Новый Массив;
			МассивКоманд.Добавить(Новый Структура("text, request_location", "Завершить", Истина));
			МассивКоманд.Добавить("Указать время");
			МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1);			
		Иначе
			ТекстСообщения = "Не удалось преобразовать " + Команда + " к времени. " + Символы.ПС 
			+ "Введите время начала работы в формате час:минута(например 10:15)";	
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("КонецПериода") Тогда
		Если Команда = Неопределено Тогда
			Дата =  дата('00010101') + (ТекущаяДата()-НачалоДня(ТекущаяДата()));
			КоординатыЗавершения = стрUpdates.Координаты; 
			КоординатыЗавершения.Вставить("Дата", ТекущаяДата());
			Параметры.Вставить("КоординатыЗавершения", КоординатыЗавершения);
		ИначеЕсли Команда = "/Указать время" Тогда
			ТекстСообщения = "Введите время окончания работы в формате час:минута(например 10:15)";
			Возврат Неопределено;	
		Иначе	
			ДатаСтрокой = "01.01.0001 " + Команда + ":00";
			Дата = ОбщегоНазначения.ПривестиСтрокуКДате(ДатаСтрокой);			
		КонецЕсли;		
		Если ЗначениеЗаполнено(Дата) Тогда
			Параметры.Вставить("КонецПериода", Дата);		 
			Если Параметры.КонецПериода < Параметры.НачалоПериода Тогда
				ТекстСообщения = "Время окончания работы " + Формат(Параметры.КонецПериода, "ДЛФ=T") + " не может быть меньше времени начала " + Формат(Параметры.НачалоПериода, "ДЛФ=T") +"!" + Символы.ПС + Символы.ПС
				+ "Введите время начала работы в формате час:минута(например 10:15)";	
				Параметры.Удалить("НачалоПериода");	
				МассивКоманд = Новый Массив;
				МассивКоманд.Добавить(Новый Структура("text, request_location", "Начать", Истина));
				МассивКоманд.Добавить("Указать время");			
				МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1);		
			Иначе
				ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);			
				ТекстСообщения = "Введите комментарий к работе:";
			КонецЕсли;
		Иначе
			ТекстСообщения = "Не удалось преобразовать " + Команда + " к времени. " + Символы.ПС 
			+ "Введите время окончания работы в формате час:минута(например 11:15)";	
		КонецЕсли;			
	ИначеЕсли Не Параметры.Свойство("Комментарий") Тогда 
		Параметры.Вставить("Комментарий", Команда);			
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);

		стрПараметры = Новый Структура;
		стрПараметры.Вставить("Проект", Параметры.Проект);
		стрПараметры.Вставить("Сотрудник", Параметры.Сотрудник);
		стрПараметры.Вставить("Автор", стрUpdates.Пользователь);
		стрПараметры.Вставить("ВремяНачала", Параметры.НачалоПериода);
		стрПараметры.Вставить("ВремяОкончания", Параметры.КонецПериода);
		стрПараметры.Вставить("Комментарий", Параметры.Комментарий);
		Если Параметры.Свойство("КоординатыЗавершения") Тогда
			стрПараметры.Вставить("КоординатыЗавершения", Параметры.КоординатыЗавершения);
		КонецЕсли;
		Если Параметры.Свойство("КоординатыНачала") Тогда
			стрПараметры.Вставить("КоординатыНачала", Параметры.КоординатыНачала);
		КонецЕсли;
		//ТекстСообщения = ЗначениеВСтрокуВнутр(стрПараметры);
		СсылкаДокумент = Документы.РабочееВремя.СоздатьОбновитьДокументРабочееВремя(стрПараметры);	
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(СсылкаДокумент);
		ФоновыеЗадания.Выполнить("ИнтеграцияСВнешнимиСистемамиСервер.ПерезаписатьЗначениеАдресаВДокументе", МассивПараметров);
		ТекстСообщения = "Для сотрудника " + Параметры.Сотрудник + " создан документ " + СсылкаДокумент;
		ОбнулитьТекущееМенюПользователя(стрUpdates);
		//ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
		булПоказатьНачальноеМеню = Истина;

	КонецЕсли;

КонецФункции // ОбработатьКомандуРабочееВремя(ТекущееМеню)()

Функция ОбработатьКомандуНазначитьЗадачу(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню)
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	МассивРолейПользователя = Справочники.ТелеграмРолиДоступа.ПолучитьМассивРолейПользователя(стрUpdates.Пользователь);	
	Если Не Параметры.Свойство("Сотрудник") И Лев(Команда,3) = "/С-" Тогда
		ИмяСотрудника = Прав(Команда, СтрДлина(Команда) - 3);
		Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ИмяСотрудника, Истина);	
		Если Не Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Параметры.Вставить("Сотрудник", Сотрудник);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Укажите комментарий к задаче(максимум 150 символов):";
		Иначе
			ТекстСообщения = "Не удалось найти сотрудника " + ИмяСотрудника;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Сотрудник") Тогда
		МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
		МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 2); 
		ТекстСообщения = "Выберите сотрудника:";	
	ИначеЕсли Не Параметры.Свойство("Комментарий") Тогда 
		Параметры.Вставить("Комментарий", Команда);			
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
		ТекстСообщения = "Укажите срок выполнени задачи в днях(используйте числовую клавиатуру):";
	Иначе	
		СрокЧисло = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		Если СрокЧисло = 0 Тогда
	    	ТекстСообщения = "Введены некорректные данные, " + Команда + " не является числом!" + Символы.ПС + "Используйте числовую клавиатуру для ввода.";
		Иначе
			стрПараметры = Новый Структура;
			Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("Сотрудник",  Параметры.Сотрудник);
			стрПараметры.Вставить("Исполнитель", Пользователь);
			стрПараметры.Вставить("Автор", стрUpdates.Пользователь);
			стрПараметры.Вставить("Комментарий", Параметры.Комментарий);
			стрПараметры.Вставить("СрокВыполнения", СрокЧисло);
			//ТекстСообщения = ЗначениеВСтрокуВнутр(стрПараметры);
			СсылкаДокумент = Задачи.ЗадачиПользователя.СоздатьЗадачуДляПользователя(стрПараметры);	
			ТекстСообщения = "Для сотрудника " + Параметры.Сотрудник + " создана задача " + СсылкаДокумент;
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			//ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
			булПоказатьНачальноеМеню = Истина;		

			Если НЕ Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
				И Пользователь.ТелеграмИД > 0 Тогда
				ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Пользователь.ТелеграмИД),"Для вас назначена " + СсылкаДокумент + ", пользователем " + стрUpdates.Пользователь);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецФункции // ОбработатьКомандуРабочееВремя(ТекущееМеню)()

Функция ОбработатьКомандуПанельЗадач(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню)
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	МассивРолейПользователя = Справочники.ТелеграмРолиДоступа.ПолучитьМассивРолейПользователя(стрUpdates.Пользователь);	
	Если Команда = "/Панель задач" Тогда
		МассивКоманд = Новый Массив;
		МассивКоманд.Добавить("/Назначить задачу");
		МассивКоманд.Добавить("/Мои задачи");
		МассивКоманд.Добавить("/Назначенные мной");
		МассивКнопок = СформироватьМассивКоманд(, МассивКоманд, 2); 
		ТекстСообщения = "Выберите команду:";
	ИначеЕсли Команда = "/Мои задачи" Тогда
		МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачПользователя(стрUpdates.Пользователь);	
		МассивКнопок = СформироватьМассивКоманд("/З-", МассивКоманд, 1); 
		МассивДопКоманд = Новый Массив;
		МассивДопКоманд.Добавить("/Назначить задачу");
		МассивДопКоманд.Добавить("/Мои задачи");
		МассивДопКоманд.Добавить("/Назначенные мной");
		МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
		МассивКнопок.Добавить(МассивДопКоманд);
		ТекстСообщения = "Выберите задачу:";
	ИначеЕсли Команда = "/Назначенные мной" Тогда
		МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачКуратора(стрUpdates.Пользователь);	
		МассивКнопок = СформироватьМассивКоманд("/ЗК-", МассивКоманд, 1); 
		МассивДопКоманд = Новый Массив;
		МассивДопКоманд.Добавить("/Назначить задачу");
		МассивДопКоманд.Добавить("/Мои задачи");
		МассивДопКоманд.Добавить("/Назначенные мной");
		МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
		МассивКнопок.Добавить(МассивДопКоманд);
		ТекстСообщения = "Выберите задачу:";
	ИначеЕсли Лев(Команда, 3) = "/З-" И СтрНайти(Команда, "--") > 0 Тогда
		СтрокаНомерЗадачи = СтрЗаменить(Команда, "/З-", "");
		ПозицияРазделителя = СтрНайти(СтрокаНомерЗадачи, "--");
		НомерЗадачи = Лев(СтрокаНомерЗадачи, ПозицияРазделителя - 1);
		СсылкаЗадача = Задачи.ЗадачиПользователя.НайтиПоНомеру(НомерЗадачи);
		Если СсылкаЗадача = ПредопределенноеЗначение("Задача.ЗадачиПользователя.ПустаяСсылка") Тогда
			ТекстСообщения = "По номеру " + НомерЗадачи + " не удалось получить задачу пользователя! Обратитесь в ИТ отдел." + Символы.ПС + "Выберите задачу:";
			МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачПользователя(стрUpdates.Пользователь);
			МассивКнопок = СформироватьМассивКоманд("/З-", МассивКоманд, 1); 
			МассивДопКоманд = Новый Массив;
			МассивДопКоманд.Добавить("/Назначить задачу");
			МассивДопКоманд.Добавить("/Мои задачи");
			МассивДопКоманд.Добавить("/Назначенные мной");
			МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
			МассивКнопок.Добавить(МассивДопКоманд);	
		ИначеЕсли Не СсылкаЗадача.Исполнитель = стрUpdates.Пользователь Тогда
			ТекстСообщения = "Вы(" + стрUpdates.Пользователь + " не являетесь исполнителем(" + СсылкаЗадача.Исполнитель + ") задачи. Изменение статуса задачи возможно только исполнителем!" + Символы.ПС + "Выберите задачу:";
			МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачПользователя(стрUpdates.Пользователь);
			МассивКнопок = СформироватьМассивКоманд("/З-", МассивКоманд, 1); 
			МассивДопКоманд = Новый Массив;
			МассивДопКоманд.Добавить("/Назначить задачу");
			МассивДопКоманд.Добавить("/Мои задачи");
			МассивДопКоманд.Добавить("/Назначенные мной");
			МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
			МассивКнопок.Добавить(МассивДопКоманд);				
		Иначе
			Параметры.Вставить("Задача", СсылкаЗадача);	
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
			МассивКоманд = Новый Массив;
			МассивКоманд.Добавить("/Выполнить");
			МассивКнопок = СформироватьМассивКоманд("", МассивКоманд, 1); 
			ТекстСообщения = "Выберите команду:";
		КонецЕсли;
	ИначеЕсли Лев(Команда, 4) = "/ЗК-" И СтрНайти(Команда, "--") > 0 Тогда
		СтрокаНомерЗадачи = СтрЗаменить(Команда, "/ЗК-", "");
		ПозицияРазделителя = СтрНайти(СтрокаНомерЗадачи, "--");
		НомерЗадачи = Лев(СтрокаНомерЗадачи, ПозицияРазделителя - 1);
		СсылкаЗадача = Задачи.ЗадачиПользователя.НайтиПоНомеру(НомерЗадачи);
		Если СсылкаЗадача = ПредопределенноеЗначение("Задача.ЗадачиПользователя.ПустаяСсылка") Тогда
			ТекстСообщения = "По номеру " + НомерЗадачи + " не удалось получить задачу пользователя! Обратитесь в ИТ отдел." + Символы.ПС + "Выберите задачу:";
			МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачКуратора(стрUpdates.Пользователь);
			МассивКнопок = СформироватьМассивКоманд("/ЗК-", МассивКоманд, 1); 
			МассивДопКоманд = Новый Массив;
			МассивДопКоманд.Добавить("/Назначить задачу");
			МассивДопКоманд.Добавить("/Мои задачи");
			МассивДопКоманд.Добавить("/Назначенные мной");
			МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
			МассивКнопок.Добавить(МассивДопКоманд);	
		ИначеЕсли Не СсылкаЗадача.Куратор = стрUpdates.Пользователь Тогда
			ТекстСообщения = "Вы(" + стрUpdates.Пользователь + " не являетесь куратором задачи. Изменение статуса задачи возможно только куратором!" + Символы.ПС + "Выберите задачу:";
			МассивКоманд = Задачи.ЗадачиПользователя.ПолучитьМассивЗадачКуратора(стрUpdates.Пользователь);
			МассивКнопок = СформироватьМассивКоманд("/ЗК-", МассивКоманд, 1); 
			МассивДопКоманд = Новый Массив;
			МассивДопКоманд.Добавить("/Назначить задачу");
			МассивДопКоманд.Добавить("/Мои задачи");
			МассивДопКоманд.Добавить("/Назначенные мной");
			МассивДопКнопок = СформироватьМассивКоманд("", МассивДопКоманд, 2); 
			МассивКнопок.Добавить(МассивДопКоманд);				
		Иначе
			Параметры.Вставить("Задача", СсылкаЗадача);
			Параметры.Вставить("НапомнитьИсполнителю", Истина);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
			МассивКоманд = Новый Массив;
			МассивКоманд.Добавить("/Выполнить");
			МассивКоманд.Добавить("/Напомнить");
			МассивКнопок = СформироватьМассивКоманд("", МассивКоманд, 2); 
			ТекстСообщения = "Выберите команду:";
		КонецЕсли;		
	ИначеЕсли Параметры.Свойство("Задача") И Команда = "/Выполнить" Тогда
		ТекстСообщения = "Укажите комментарий к задаче:";
	ИначеЕсли Параметры.Свойство("Задача") И Команда = "/Напомнить" Тогда
		Задача = Параметры.Задача;
		Исполнитель = Задача.Исполнитель; 
		
		Если НЕ Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
			И Исполнитель.ТелеграмИД > 0 Тогда
			ТекстСообщения = "Пользователю " + Исполнитель + " отправлено напоминание.";
			ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Исполнитель.ТелеграмИД),"Куратор задачи(<strong>" + стрUpdates.Пользователь + "</strong>) напомнил вам о необходимости <strong>выполнения</strong> задачи " + Задача,, ,"HTML");
		Иначе
			ТекстСообщения = "Не удалось отправить напоминание пользователю " + Исполнитель + ". Пользователь не подключен к Телеграмм.";
		КонецЕсли;
		ОбнулитьТекущееМенюПользователя(стрUpdates);
		булПоказатьНачальноеМеню = Истина;		
	ИначеЕсли Параметры.Свойство("Задача") Тогда
		//Параметры.Вставить("Комментарий", Команда);
		ОбъектЗадача = Параметры.Задача.ПолучитьОбъект();
		ОбъектЗадача.Комментарий = Команда; 
		ОбъектЗадача.ПользовательВыполнятель = стрUpdates.Пользователь;
		ОбъектЗадача.ВыполнитьЗадачу();	
		МассивКоманд = Новый Массив;
		МассивКоманд.Добавить("/Назначить задачу");
		МассивКоманд.Добавить("/Мои задачи");
		МассивКоманд.Добавить("/Назначенные мной");
		МассивКнопок = СформироватьМассивКоманд(, МассивКоманд, 2); 
		ТекстСообщения = "Выберите команду:";
		Параметры.Удалить("Задача");
		//Если Параметры.Свойство("НапомнитьИсполнителю") Тогда
		//	
		//КонецЕсли;
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
	ИначеЕсли Не Параметры.Свойство("Сотрудник") И Лев(Команда,3) = "/С-" Тогда
		ИмяСотрудника = Прав(Команда, СтрДлина(Команда) - 3);
		Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ИмяСотрудника, Истина);	
		Если Не Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
			Параметры.Вставить("Сотрудник", Сотрудник);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Укажите комментарий к задаче(максимум 150 символов):";
		Иначе
			ТекстСообщения = "Не удалось найти сотрудника " + ИмяСотрудника;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Сотрудник") Тогда
		МассивСотрудников = Справочники.Сотрудники.ПолучитьМассивСотрудников();
		МассивКнопок = СформироватьМассивКоманд("/С-", МассивСотрудников, 2); 
		ТекстСообщения = "Выберите сотрудника:";	
	ИначеЕсли Не Параметры.Свойство("Комментарий") Тогда 
		Параметры.Вставить("Комментарий", Команда);			
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
		ТекстСообщения = "Укажите срок выполнени задачи в днях(используйте числовую клавиатуру):";
	Иначе	
		СрокЧисло = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		Если СрокЧисло = 0 Тогда
	    	ТекстСообщения = "Введены некорректные данные, " + Команда + " не является числом!" + Символы.ПС + "Используйте числовую клавиатуру для ввода.";
		Иначе
			стрПараметры = Новый Структура;
			Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("Сотрудник",  Параметры.Сотрудник);
			стрПараметры.Вставить("Исполнитель", Пользователь);
			стрПараметры.Вставить("Автор", стрUpdates.Пользователь);
			стрПараметры.Вставить("Комментарий", Параметры.Комментарий);
			стрПараметры.Вставить("СрокВыполнения", СрокЧисло);
			//ТекстСообщения = ЗначениеВСтрокуВнутр(стрПараметры);
			СсылкаДокумент = Задачи.ЗадачиПользователя.СоздатьЗадачуДляПользователя(стрПараметры);	
			ТекстСообщения = "Для сотрудника " + Параметры.Сотрудник + " создана задача " + СсылкаДокумент;
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			//ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
			булПоказатьНачальноеМеню = Истина;		

			Если НЕ Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
				И Пользователь.ТелеграмИД > 0 Тогда
				ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Пользователь.ТелеграмИД),"Для вас назначена " + СсылкаДокумент + ", пользователем " + стрUpdates.Пользователь);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецФункции // ОбработатьКомандуРабочееВремя(ТекущееМеню)()

Функция ОбработатьКомандуЗанестиРасход(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню)
	
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	Если Не Параметры.Свойство("Проект") И Лев(Команда,3) = "/П-" Тогда
		ИмяПроекта = Прав(Команда, СтрДлина(Команда) - 3);
		Проект = Справочники.Проекты.НайтиПоНаименованию(ИмяПроекта, Истина);	
		Если Не Проект = Справочники.Проекты.ПустаяСсылка() ИЛИ ИмяПроекта = "Без проекта" Тогда
			Параметры.Вставить("Проект", Проект);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Введите наименование товара/услуги на которую были потрачены деньги:";
		Иначе
			ТекстСообщения = "Не удалось найти проект " + ИмяПроекта;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Проект") Тогда
		МассивПроектов = Справочники.Проекты.ПолучитьМассивПроектов();
		МассивПроектов.Добавить("Без проекта");
		МассивКнопок = СформироватьМассивКоманд("/П-", МассивПроектов, 2); 
		ТекстСообщения = "Выберите проект:";
	ИначеЕсли Не Параметры.Свойство("НаименованиеЗатраты") Тогда
		Параметры.Вставить("НаименованиеЗатраты", Команда);
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
		ТекстСообщения = "Введите сумму потраченных денег:";
	ИначеЕсли Не Параметры.Свойство("Сумма") Тогда
		Сумма = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		Если Сумма = 0 Тогда
	    	ТекстСообщения = "Введены некорректные данные, " + Команда + " не является числом!" + Символы.ПС + "Используйте числовую клавиатуру для ввода.";
		Иначе
			Параметры.Вставить("Сумма", Сумма);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			ТекстСообщения = "Введите комментарий к затрате:";		
		КонецЕсли;
	Иначе 
		Параметры.Вставить("Комментарий", Команда);			
		ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);

		стрПараметры = Новый Структура;
		стрПараметры.Вставить("Проект", Параметры.Проект);
		стрПараметры.Вставить("Сотрудник", стрUpdates.Пользователь.Сотрудник);
		//стрПараметры.Вставить("Автор", стрUpdates.Пользователь);
		стрПараметры.Вставить("НаименованиеЗатраты", Параметры.НаименованиеЗатраты);
		стрПараметры.Вставить("Сумма", Параметры.Сумма);
		стрПараметры.Вставить("Комментарий", Параметры.Комментарий);
		//ТекстСообщения = ЗначениеВСтрокуВнутр(стрПараметры);
		
		СсылкаДокумент = Документы.ПрочиеЗатраты.СоздатьОбновитьДокументПрочиеЗатраты(стрПараметры);	
		ТекстСообщения = "Для сотрудника " + стрUpdates.Пользователь.Сотрудник + " создан документ " + СсылкаДокумент;
		ОбнулитьТекущееМенюПользователя(стрUpdates);
		//ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
		булПоказатьНачальноеМеню = Истина;

	КонецЕсли;

КонецФункции // ОбработатьКомандуЗанестиРасход(ТекущееМеню)()

Функция ОбработатьКомандуПолучитьСчет(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню)
	//Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	Если Команда = "/Получить счет" Тогда
		ТекстСообщения = "Введите номер счета:";	
	ИначеЕсли Лев(Команда, 4) = "/СЧ-" И СтрНайти(Команда, "--") > 0 Тогда
		СтрокаНомерСчета = СтрЗаменить(Команда, "/СЧ-", "");
		ПозицияРазделителя = СтрНайти(СтрокаНомерСчета, "--");
		НомерСчета = Лев(СтрокаНомерСчета, ПозицияРазделителя - 1);
		НомерИндекса = Сред(СтрокаНомерСчета, ПозицияРазделителя + 2, 1);
		
		НомерСчетаЧисло =  ОбщегоНазначения.ПривестиСтрокуКЧислу(НомерСчета);
		НомерИндексаЧисло =  ОбщегоНазначения.ПривестиСтрокуКЧислу(НомерИндекса);
		Если НомерСчетаЧисло = 0 ИЛИ НомерИндексаЧисло = 0 Тогда
			ТекстСообщения = "Не удалось определить номер счета(" + НомерСчета + ") или индекса счета(" + НомерИндекса + ") из команды " + Команда; 
		Иначе	
			МассивСчетов = Документы.СчетПокупателя.ПолучитьМассивСчетовПоНомеруFM(НомерСчетаЧисло);
			Счет = МассивСчетов[НомерИндексаЧисло - 1]; 
			ТабДок = Документы.СчетПокупателя.ПечатьСчетНаОплату(Счет,,Истина);
			ТабДок.АвтоМасштаб = Истина;
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
			ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.PDF);
			стрВложенныйФайл = Новый Структура;
			стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
			стрВложенныйФайл.Вставить("ТипФайла", "Документ");
			стрВложенныйФайл.Вставить("Подпись", "Счет " + НомерСчетаЧисло);
			стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Счет " + НомерСчетаЧисло);
			ТекстСообщения = "Счет";
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			булПоказатьНачальноеМеню = Истина;
		КонецЕсли;
	Иначе
		//Счет = Документы.СчетПокупателя.НайтиПоРеквизиту("НомерFM", ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда));
		НомерСчетаЧисло = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		МассивСчетов = Документы.СчетПокупателя.ПолучитьМассивСчетовПоНомеруFM(НомерСчетаЧисло);
		Если МассивСчетов.Количество() = 1 Тогда
			Счет = МассивСчетов[0]; 
			ТабДок = Документы.СчетПокупателя.ПечатьСчетНаОплату(Счет,,Истина);
			ТабДок.АвтоМасштаб = Истина;
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
			ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.PDF);
			стрВложенныйФайл = Новый Структура;
			стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
			стрВложенныйФайл.Вставить("ТипФайла", "Документ");
			стрВложенныйФайл.Вставить("Подпись", "Счет " + Команда);
			стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Счет " + Команда);
			ТекстСообщения = "Счет";
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			булПоказатьНачальноеМеню = Истина;
		ИначеЕсли МассивСчетов.Количество() > 1 Тогда
			МассивДанные = Новый Массив;
			Итератор = 1;
			Для Каждого Счет ИЗ МассивСчетов Цикл 
				СтрокаКоманда =	Формат(Счет.НомерFM, "ЧГ=") + "--" + Формат(Итератор, "ЧГ=") + " " + Счет.Контрагент + "(Сумма: " + Счет.СуммаДокумента + "), " + Счет.Организация;  
				МассивДанные.Добавить(СтрокаКоманда);
				Итератор = Итератор + 1;
			КонецЦикла;
			МассивКнопок = СформироватьМассивКоманд("/СЧ-", МассивДанные, 1);
			ТекстСообщения = "С таким номером обнаружено больше чем 1 счет, выберите нужный счет:";
		Иначе
			ТекстСообщения = "Не удалось найти счет по номеру " + Команда + ", попробуйте еще раз.";
		КонецЕсли;
	КонецЕсли;
КонецФункции // ОбработатьКомандуПолучитьСчет()

Функция ОбработатьКомандуОтчетПоДолгам(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню)
	
	ТабДок = Документы.СчетПокупателя.ПолучитьТабДокДолжников("Долги20трБезДетализации");
	ТабДок.АвтоМасштаб = Истина;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
	ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
	стрВложенныйФайл = Новый Структура;
	стрВложенныйФайл.Вставить("ТипФайла", "Документ");
	стрВложенныйФайл.Вставить("Подпись", "Отчет по долгам сокращенный");
	стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
	стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Отчет по долгам сокращенный");
	ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", стрUpdates.id), ТекстСообщения,, стрВложенныйФайл);	
	
	
	ТабДок = Документы.СчетПокупателя.ПолучитьТабДокДолжников("Долги20тр");
	ТабДок.АвтоМасштаб = Истина;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
	ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
	стрВложенныйФайл = Новый Структура;
	стрВложенныйФайл.Вставить("ТипФайла", "Документ");
	стрВложенныйФайл.Вставить("Подпись", "Отчет по долгам");
	стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
	стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Отчет по долгам");
	ТекстСообщения = "Отчет";
	ОбнулитьТекущееМенюПользователя(стрUpdates);
	булПоказатьНачальноеМеню = Истина;	
	
КонецФункции // ОбработатьКомандуПолучитьСчет()

Функция ОбработатьКомандуОтчетПоНачислениям(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню)
	
	ТабДок = Документы.НачислениеЗП.ПолучитьТабДокНачислений();
	ТабДок.АвтоМасштаб = Истина;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
	ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
	стрВложенныйФайл = Новый Структура;
	стрВложенныйФайл.Вставить("ТипФайла", "Документ");
	стрВложенныйФайл.Вставить("Подпись", "Отчет по начислениям");
	стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
	стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Отчет по начислениям");
	//ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", стрUpdates.id), ТекстСообщения,, стрВложенныйФайл);	
	
	
	//ТабДок = Документы.СчетПокупателя.ПолучитьТабДокДолжников("Долги20тр");
	//ТабДок.АвтоМасштаб = Истина;
	//ИмяВременногоФайла = ПолучитьИмяВременногоФайла("html");
	//ТабДок.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
	//стрВложенныйФайл = Новый Структура;
	//стрВложенныйФайл.Вставить("ТипФайла", "Документ");
	//стрВложенныйФайл.Вставить("Подпись", "Отчет по долгам");
	//стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
	//стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Отчет по долгам");
	ТекстСообщения = "Отчет";
	ОбнулитьТекущееМенюПользователя(стрUpdates);
	булПоказатьНачальноеМеню = Истина;	
	
КонецФункции // ОбработатьКомандуПолучитьСчет()

Функция ОбработатьКомандуЗанестиОплату(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню)
	//Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	Если Команда = "/Занести оплату" Тогда
		ТекстСообщения = "Введите номер счета:";	
	ИначеЕсли Лев(Команда, 4) = "/СЧ-" И СтрНайти(Команда, "--") > 0 Тогда
		СтрокаНомерСчета = СтрЗаменить(Команда, "/СЧ-", "");
		ПозицияРазделителя = СтрНайти(СтрокаНомерСчета, "--");
		НомерСчета = Лев(СтрокаНомерСчета, ПозицияРазделителя - 1);
		НомерИндекса = Сред(СтрокаНомерСчета, ПозицияРазделителя + 2, 1);
		
		НомерСчетаЧисло =  ОбщегоНазначения.ПривестиСтрокуКЧислу(НомерСчета);
		НомерИндексаЧисло =  ОбщегоНазначения.ПривестиСтрокуКЧислу(НомерИндекса);
		Если НомерСчетаЧисло = 0 ИЛИ НомерИндексаЧисло = 0 Тогда
			ТекстСообщения = "Не удалось определить номер счета(" + НомерСчета + ") или индекса счета(" + НомерИндекса + ") из команды " + Команда; 
		Иначе	
			МассивСчетов = Документы.СчетПокупателя.ПолучитьМассивСчетовПоНомеруFM(НомерСчетаЧисло);
			Счет = МассивСчетов[НомерИндексаЧисло - 1]; 
			Документы.СчетПокупателя.УстановитьПометкуСчетОплачен(Счет);
			ТекстСообщения = "Отметка оплаты для счета установлена!";
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			булПоказатьНачальноеМеню = Истина;
		КонецЕсли;
	Иначе
		//Счет = Документы.СчетПокупателя.НайтиПоРеквизиту("НомерFM", ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда));
		НомерСчетаЧисло = ОбщегоНазначения.ПривестиСтрокуКЧислу(Команда);
		МассивСчетов = Документы.СчетПокупателя.ПолучитьМассивСчетовПоНомеруFM(НомерСчетаЧисло);
		Если МассивСчетов.Количество() > 0 Тогда
			МассивДанные = Новый Массив;
			Итератор = 1;
			Для Каждого Счет ИЗ МассивСчетов Цикл 
				СтрокаКоманда =	Формат(Счет.НомерFM, "ЧГ=") + "--" + Формат(Итератор, "ЧГ=") + " " + Счет.Контрагент + "(Сумма: " + Счет.СуммаДокумента + "), " + Счет.Организация + ", " + ?(Счет.Оплачен, "Оплачен", "Не оплачен");  
				МассивДанные.Добавить(СтрокаКоманда);
				Итератор = Итератор + 1;
			КонецЦикла;
			МассивКнопок = СформироватьМассивКоманд("/СЧ-", МассивДанные, 1);
			ТекстСообщения = "Подтвердите номер счета:";
		Иначе
			ТекстСообщения = "Не удалось найти счет по номеру " + Команда + ", попробуйте еще раз.";
		КонецЕсли;
	КонецЕсли;
КонецФункции // ОбработатьКомандуПолучитьСчет()

Функция ОбработатьКомандуФотоКПроекту(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню)
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТелеграмТекущееМеню");
	ЭлементБлокировки.УстановитьЗначение("Пользователь", стрUpdates.Пользователь);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;	
	Блокировка.Заблокировать();
	
	Параметры = ПолучитьПараметрыТекущегоМенюПользователя(стрUpdates.Пользователь);
	МассивРолейПользователя = Справочники.ТелеграмРолиДоступа.ПолучитьМассивРолейПользователя(стрUpdates.Пользователь);
	МассивДоступныхПроектов = Справочники.Сотрудники.ПолучитьМассивДоступныхПроектов(стрUpdates.Сотрудник);
	
	Если Не Параметры.Свойство("Проект") И Лев(Команда,3) = "/П-" Тогда
		ИмяПроекта = Прав(Команда, СтрДлина(Команда) - 3);
		Проект = Справочники.Проекты.НайтиПоНаименованию(ИмяПроекта, Истина);	
		Если Не Проект = Справочники.Проекты.ПустаяСсылка() Тогда
			Параметры.Вставить("Проект", Проект);	
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);
			ТекстСообщения = "Выберите фотографии:";
		Иначе
			ТекстСообщения = "Не удалось найти проект " + ИмяПроекта;
		КонецЕсли;
	ИначеЕсли Не Параметры.Свойство("Проект") Тогда
		Если МассивДоступныхПроектов.Количество() = 1 Тогда
			Параметры.Вставить("Проект", МассивДоступныхПроектов[0]);	
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры);	
			ТекстСообщения = "Выберите фотографии:";			
		ИначеЕсли МассивДоступныхПроектов.Количество() > 0 Тогда
			МассивКнопок = СформироватьМассивКоманд("/П-", МассивДоступныхПроектов, 1); 
			ТекстСообщения = "Выберите проект:";			
		Иначе
			МассивПроектов = Справочники.Проекты.ПолучитьМассивПроектов();
			МассивКнопок = СформироватьМассивКоманд("/П-", МассивПроектов, 1); 
			ТекстСообщения = "Выберите проект:";
		КонецЕсли;
	ИначеЕсли Не Команда = "/Сохранить" И НЕ стрUpdates.Свойство("Фото") Тогда
		ТекстСообщения = "Выберите фотографии:";
	ИначеЕсли Команда = "/Сохранить" И НЕ Параметры.Свойство("Фото") Тогда
		ТекстСообщения = "Нет загруженных фотографий. Сначала загрузите фотографии.";
		МассивКоманд = Новый Массив;
		МассивКоманд.Добавить("Сохранить");
		МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1); 		
	ИначеЕсли Команда = "/Сохранить" Тогда 
		МассивФото = Параметры.Фото;
		ссылкаПроект = Параметры.Проект; 
		Для Каждого ФотоДД ИЗ МассивФото Цикл
			Справочники.ХранилищеПрикрепленныхФайлов.ЗагрузитьФайлНаСервере(ПоместитьВоВременноеХранилище(ФотоДД.Оригинал), ФотоДД.ИмяФайла, ссылкаПроект);  
			//ИмяВременногоФайла = ПолучитьИмяВременногоФайла("jpg");
			//ФотоДД.Оригинал.Записать(ИмяВременногоФайла);		
			//СсылкаХранилище = РаботаСФайлами.ЗаписатьФайлВХранилищеУниверсально(ИмяВременногоФайла, Перечисления.ВидыДополнительнойИнформацииОбъектов.Прочее, СсылкаДК, Истина);	
		КонецЦикла;
		ТекстСообщений = ОбщегоНазначения.ПолучитьТексИзМассиваСообщенийПользователю();
		Если Не ПустаяСтрока(ТекстСообщений) Тогда
			РаботаСЭлектроннойПочтойСервер.ОтправитьПисьмоОбОшибке("Ошибка при сохранении фотографий из Телеграм на сервере", ТекстСообщений);
			ТекстСообщений = "При сохранении изображений произошла ошибка, попробуйте еще раз.";
		Иначе
			ОбнулитьТекущееМенюПользователя(стрUpdates);
			булПоказатьНачальноеМеню = Истина;	
			СообщениеКуратору = "По проекту: " + ссылкаПроект + ", сотрудником: " + стрUpdates.Пользователь + " загружено " + МассивФото.Количество() + " фотографии";  
			ОтправитьОповещениеКураторуПроекта(ссылкаПроект, СообщениеКуратору, МассивФото);
		КонецЕсли;
	Иначе	
		Если Параметры.Свойство("Фото") Тогда
			МассивФото = Параметры.Фото;
		Иначе
			МассивФото = Новый Массив;
		КонецЕсли;
		Если стрUpdates.Фото.Тип = "Изображение" Тогда  
			стрИконка = ПолучитьДвоичныеДанныеФото(стрUpdates.Фото.Иконка);
		Иначе
			стрИконка = Новый Структура("ДвоичныеДанные, ИмяФайла", БиблиотекаКартинок.Телеграм.ПолучитьДвоичныеДанные(), "telegram.jpg"); 
		КонецЕсли;
		стрОригинал = ПолучитьДвоичныеДанныеФото(стрUpdates.Фото.Оригинал); 
		Если Не стрИконка = Неопределено И Не стрОригинал = Неопределено Тогда
			МассивФото.Добавить(Новый Структура("Иконка, Оригинал, ИмяФайла, Тип", стрИконка.ДвоичныеДанные, стрОригинал.ДвоичныеДанные, стрОригинал.ИмяФайла, стрUpdates.Фото.Тип));
	       	Параметры.Вставить("Фото", МассивФото);
			ЗаписатьПараметрыТекущегоМеню(стрUpdates.Пользователь, ТекущееМеню, Параметры); 
			
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("jpg");
			стрИконка.ДвоичныеДанные.Записать(ИмяВременногоФайла);
			стрВложенныйФайл = Новый Структура;
			стрВложенныйФайл.Вставить("ТипФайла", "Изображение");
			стрВложенныйФайл.Вставить("Подпись", "Загружено " + МассивФото.Количество());
			стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
			стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Картинка");
			
			МассивКоманд = Новый Массив;
			МассивКоманд.Добавить("Сохранить");
			МассивКнопок = СформироватьМассивКоманд("/", МассивКоманд, 1); 
			ТекстСообщения = "Сохраните загруженные фотографии кнопкой сохранить.";
		Иначе
			ТекстСообщения = "Не удалось сохранить картинку, попробуйте отправить фото как фото.";		
		КонецЕсли;
		
	КонецЕсли;
	ЗафиксироватьТранзакцию();
КонецФункции // ОбработатьКомандуПолучитьСчет()

Функция СформироватьМассивКоманд(Префикс = "", МассивДанные, КоличествоВРяду = 100)
	МассивКнопок = НОвый Массив;
	ИтераторМассива = 0;
	МассивРядаКнопок = Новый Массив;
	Для Каждого Элемент ИЗ МассивДанные Цикл 
		Если ИтераторМассива = КоличествоВРяду Тогда
			МассивКнопок.Добавить(МассивРядаКнопок);
			МассивРядаКнопок = Новый Массив;
			ИтераторМассива = 0;
		КонецЕсли;
		СоответствиеКнопка = Новый Соответствие;
		Если Не ТипЗнч(Элемент) = Тип("Структура") Тогда
			СоответствиеКнопка.Вставить("text", Префикс + Элемент);
		Иначе
			СоответствиеКнопка.Вставить("text", Префикс + Элемент.text);
			СоответствиеКнопка.Вставить("request_contact", Элемент.Свойство("request_contact"));
			СоответствиеКнопка.Вставить("request_location", Элемент.Свойство("request_location"));
		КонецЕсли;
		МассивРядаКнопок.Добавить(СоответствиеКнопка);
		ИтераторМассива = ИтераторМассива + 1;
	КонецЦикла;
	МассивКнопок.Добавить(МассивРядаКнопок);
	Возврат МассивКнопок;
КонецФункции

Функция СформироватьОтветПользователю(стрUpdates)
	стрВложенныйФайл = Неопределено;
	ТекстСообщения = "";
	МассивКнопок = Новый Массив;
	Команда = стрUpdates.text; 
	булЕстьПравоНаКоманду = Истина;
	КомандаСправочник = Неопределено;
	Если Команда = "/Стоп" Тогда
		ОбнулитьТекущееМенюПользователя(стрUpdates);
		ТекущееМеню = Неопределено;
	Иначе
		ТекущееМеню = ПолучитьТекущееМенюПользователя(стрUpdates.Пользователь);
        Если ТекущееМеню = Неопределено Тогда
			//стрОтвет = ПолучитьСтруктуруМеню(ТекущееМеню, стрUpdates);
			КомандаСправочник = Справочники.ТелеграмКоманды.НайтиПоНаименованию(Команда, Истина);
			Если Не КомандаСправочник = ПредопределенноеЗначение("Справочник.ТелеграмКоманды.ПустаяСсылка") Тогда
				булЕстьПравоНаКоманду = ПроверитьПравоНаВыполнениеКоманды(КомандаСправочник, стрUpdates.Пользователь);
				Если булЕстьПравоНаКоманду Тогда
					УстановитьТекущееМенюПользователя(КомандаСправочник, стрUpdates);
					ТекущееМеню = КомандаСправочник;
				Иначе
					ТекстСообщения = "Команда " + Команда + " не найдена или у вас нет права на выполнение команды!";	
				КонецЕсли;
			//Иначе
			//	стрОтвет = ПолучитьСтруктуруМеню(ТекущееМеню, стрUpdates);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	булПоказатьНачальноеМеню = Ложь;	
	Если ТекущееМеню = Справочники.ТелеграмКоманды.ВыдатьДеньги Тогда
		ОбработатьКомандуВыдатьДеньги(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню); 
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ПолучитьСчет Тогда 
		ОбработатьКомандуПолучитьСчет(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ЗанестиОплату Тогда 
		ОбработатьКомандуЗанестиОплату(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.РабочееВремя Тогда
		ОбработатьКомандуРабочееВремя(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ЗанестиРасход Тогда
		ОбработатьКомандуЗанестиРасход(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ФотоКПроекту Тогда 
		ОбработатьКомандуФотоКПроекту(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ОтчетПоДолгам Тогда 
		ОбработатьКомандуОтчетПоДолгам(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.Начисления Тогда 
		ОбработатьКомандуОтчетПоНачислениям(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, стрВложенныйФайл, булПоказатьНачальноеМеню);
	//ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.НазначитьЗадачу Тогда 
	//	ОбработатьКомандуНазначитьЗадачу(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню);
	ИначеЕсли ТекущееМеню = Справочники.ТелеграмКоманды.ПанельЗадач Тогда 
		ОбработатьКомандуПанельЗадач(стрUpdates, ТекущееМеню, Команда, МассивКнопок, ТекстСообщения, булПоказатьНачальноеМеню);
	Иначе
		 ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);
	КонецЕсли;
	Если булПоказатьНачальноеМеню Тогда
		ПолучитьСтруктуруМеню(Неопределено, стрUpdates, МассивКнопок, ТекстСообщения);	
	КонецЕсли;
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("chat_id",Формат(стрUpdates.id,"ЧГ="));	
	СтруктураСообщения.Вставить("text", ТекстСообщения);	
	СтруктураКнопкоМеню = Новый Структура;
	СтруктураКнопкоМеню.Вставить("resize_keyboard",true);
	СтруктураКнопкоМеню.Вставить("one_time_keyboard",false);
	//СтруктураКнопкоМеню.Вставить("remove_keyboard",true);

	
	соотКнопкаСтоп = Новый Соответствие;
	соотКнопкаСтоп.Вставить("text", "/Стоп"); 
	соотКнопкаСтоп.Вставить("request_location", false); 
	МассивСлужебныхКнопокСтоп = Новый Массив;
	МассивСлужебныхКнопокСтоп.Добавить(соотКнопкаСтоп);
	//МассивКнопокГлавный = Новый Массив;
	//МассивКнопокГлавный.Добавить(МассивКнопок);
	МассивКнопок.Добавить(МассивСлужебныхКнопокСтоп);
	СтруктураКнопкоМеню.Вставить("keyboard", МассивКнопок);
	
	СтруктураСообщения.Вставить("reply_markup",СтруктураКнопкоМеню);
	
	
	СообщениеПользователю(стрUpdates, ТекстСообщения, СтруктураСообщения, стрВложенныйФайл);
	//Возврат стрОтвет;
КонецФункции

Процедура ОтправитьОповещениеКураторуПроекта(Проект, ТекстСообщения, МассивФайлов = Неопределено) 
	Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");	
	Если ЗначениеЗаполнено(Проект.Куратор) Тогда
		Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("Сотрудник",  Проект.Куратор);		
	КонецЕсли;

	Если НЕ Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
		И Пользователь.ТелеграмИД > 0 Тогда
		ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Пользователь.ТелеграмИД), ТекстСообщения);
	КонецЕсли;
	
	Если Не МассивФайлов = Неопределено Тогда
		Для Каждого Фото Из МассивФайлов Цикл 
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("jpg");
			Фото.Оригинал.Записать(ИмяВременногоФайла);
			стрВложенныйФайл = Новый Структура;
			стрВложенныйФайл.Вставить("ТипФайла", Фото.Тип);
			стрВложенныйФайл.Вставить("Подпись", "");
			стрВложенныйФайл.Вставить("ИмяФайлаОтправки", ИмяВременногоФайла);
			стрВложенныйФайл.Вставить("ИмяФайлаБезРасширения", "Картинка");
			
			ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Пользователь.ТелеграмИД), ТекстСообщения,, стрВложенныйФайл);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
