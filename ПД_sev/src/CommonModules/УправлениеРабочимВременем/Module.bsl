Функция ПолучитьДеньНеделиПоДате(Дата) Экспорт 
	Перем ЗначениеВозврата;
	НомерДняНедели = ДеньНедели(Дата);
	Если НомерДняНедели = 1 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Понедельник");
	ИначеЕсли НомерДняНедели = 2 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Вторник");		
	ИначеЕсли НомерДняНедели = 3 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Среда");		
	ИначеЕсли НомерДняНедели = 4 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Четверг");		
	ИначеЕсли НомерДняНедели = 5 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Пятница");		
	ИначеЕсли НомерДняНедели = 6 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Суббота");		
	ИначеЕсли НомерДняНедели = 7 Тогда 
		ЗначениеВозврата = ПредопределенноеЗначение("Перечисление.ДниНедели.Воскресенье");		
	КонецЕсли;		
		
	Возврат ЗначениеВозврата;
КонецФункции

Функция РассчетСуммыПоСтрокеСервер(ТекСтрока)
	Если ЗначениеЗаполнено(ТекСтрока.ДеньНедели)
		И ЗначениеЗаполнено(ТекСтрока.ВремяНачала)
		И ЗначениеЗаполнено(ТекСтрока.ВремяОкончания) Тогда
		Если Не ЗначениеЗаполнено(ТекСтрока.ДатаДокумента) Тогда
			Дата = ТекущаяДата();
		Иначе
			Дата = ТекСтрока.ДатаДокумента;
		КонецЕсли;
		Возврат УправлениеРабочимВременем.РаспределитьВремяПОИнтервалам(ТекСтрока.ДеньНедели, ТекСтрока.ВремяНачала, ТекСтрока.ВремяОкончания, Дата); 
	КонецЕсли;
КонецФункции

Функция ПолучитьРасписаниеРабочегоДня(ДеньНедели, Дата) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтоимостьРабочегоВремениСрезПоследних.ВремяНачала КАК ВремяНачала,
	               |	СтоимостьРабочегоВремениСрезПоследних.ВремяОкончания,
	               |	СтоимостьРабочегоВремениСрезПоследних.Стоимость
	               |ИЗ
	               |	РегистрСведений.СтоимостьРабочегоВремени.СрезПоследних(&Дата, ДеньНедели = &ДеньНедели) КАК СтоимостьРабочегоВремениСрезПоследних
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВремяНачала";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДеньНедели", ДеньНедели);
	ТЗДанные = Запрос.Выполнить().Выгрузить();				   
	Возврат ТЗДанные;
КонецФункции // ПолучитьРасписаниеРабочегоДня()

Функция РаспределитьВремяПОИнтервалам(ДеньНедели, ВремяНачалаРаботы, ВремяОкончанияРаботы, Дата) Экспорт 
	ТаблицаТарифов = ПолучитьРасписаниеРабочегоДня(ДеньНедели, Дата);
	//Сумма = 0;
	Стоимость = ПолучитьСтоимостьЧаса(ДеньНедели, ВремяНачалаРаботы, ВремяОкончанияРаботы, Дата);
	//Для Каждого строкаТариф ИЗ ТаблицаТарифов Цикл 
	//	Если ВремяНачалаРаботы = ВремяОкончанияРаботы Тогда 
	//		Прервать;
	//	КонецЕсли;
	//	Если ВремяНачалаРаботы < строкаТариф.ВремяНачала Тогда
	//		ВремяНачала = строкаТариф.ВремяНачала;
	//	Иначе
	//		ВремяНачала = ВремяНачалаРаботы; 	
	//	КонецЕсли;
	//	Если ВремяОкончанияРаботы <= строкаТариф.ВремяОкончания Тогда
	//		ВремяОкончания = ВремяОкончанияРаботы;
	//	Иначе
	//		ВремяОкончания = строкаТариф.ВремяОкончания;
	//	КонецЕсли;
	//	ИтогПоИнтервалу = ((ВремяОкончания - ВремяНачала) / 3600) * строкаТариф.Стоимость; 
	//	Если ИтогПоИнтервалу > 0 Тогда 
	//		Сумма = Сумма + ИтогПоИнтервалу;
	//	КонецЕсли;
	//	ВремяНачалаРаботы = ВремяОкончания;
	//	//ВремяОкончанияРаботы = ВремяОкончанияРаботы - ВремяОкончания;  
	//КонецЦикла;
	Возврат Стоимость
КонецФункции

Функция ПолучитьСтоимостьЧаса(ДеньНедели, ВремяНачалаРаботы, ВремяОкончанияРаботы, Дата) Экспорт 
	Сумма = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтоимостьРабочегоВремениСрезПоследних.ВремяНачала КАК ВремяНачала,
	               |	СтоимостьРабочегоВремениСрезПоследних.ВремяОкончания КАК ВремяОкончания,
	               |	СтоимостьРабочегоВремениСрезПоследних.Стоимость КАК Стоимость
	               |ИЗ
	               |	РегистрСведений.СтоимостьРабочегоВремени.СрезПоследних(&Дата, ДеньНедели = &ДеньНедели) КАК СтоимостьРабочегоВремениСрезПоследних
	               |ГДЕ
	               |	СтоимостьРабочегоВремениСрезПоследних.ВремяНачала <= &ВремяНачала
	               |	И СтоимостьРабочегоВремениСрезПоследних.ВремяОкончания >= &ВремяОкончания";
	Запрос.УстановитьПараметр("Дата", Дата); 				   			   
	Запрос.УстановитьПараметр("ДеньНедели", ДеньНедели); 				   
	Запрос.УстановитьПараметр("ВремяНачала", ВремяНачалаРаботы);
	Запрос.УстановитьПараметр("ВремяОкончания", ВремяОкончанияРаботы);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Сумма = Выборка.Стоимость;	
	КонецЕсли;				  	
	Возврат Сумма
КонецФункции


Функция НеобходимоРаспределитьСтрокуКлиент(ДеньНедели, ВремяНачала, ВремяОкончания)
	ЗначениеВозврата = Ложь;
	Если НЕ ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Суббота")
		И Не ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Воскресенье")
		И (ВремяОкончания > ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("ПерсоналОкончаниеРабочегоДня")
		ИЛИ ВремяНачала < ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("ПерсоналНачалоРабочегоДня")) Тогда 
		ЗначениеВозврата = Истина;
	КонецЕсли;
	Возврат ЗначениеВозврата;
КонецФункции

Процедура РаздробитьСтрокиКТЗНаРабочиеЧасы(ТЗЧасы, КомпенсироватьТолькоПереработки, ДатаДокумента) Экспорт 
	НачалоРабДня = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("ПерсоналНачалоРабочегоДня");
	ОкончаниеРабДня = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("ПерсоналОкончаниеРабочегоДня");
	КонецРабДня = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("ПерсоналОкончаниеРабочегоДня");
	ИтоговаяТЗ = ТЗЧасы.СкопироватьКолонки ();
	Для Каждого СтрокаРабВремя ИЗ ТЗЧасы Цикл 
		Если (СтрокаРабВремя.ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Суббота")
			ИЛИ СтрокаРабВремя.ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Воскресенье")) 
			ИЛИ (СтрокаРабВремя.ВремяНачала >= НачалоРабДня И СтрокаРабВремя.ВремяОкончания <= ОкончаниеРабДня) Тогда
			НоваяСтрока = ИтоговаяТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРабВремя);			
			Продолжить;
		КонецЕсли;
		Если СтрокаРабВремя.ВремяНачала < НачалоРабДня Тогда
			НоваяСтрока = ИтоговаяТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРабВремя);
			НоваяСтрока.ВремяОкончания = НачалоРабДня - 1;
			СтрокаРабВремя.ВремяНачала = НачалоРабДня; 
		КонецЕсли;
		Если СтрокаРабВремя.ВремяОкончания > ОкончаниеРабДня Тогда
			НоваяСтрока = ИтоговаяТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРабВремя);
			НоваяСтрока.ВремяОкончания = ОкончаниеРабДня - 1; 
			СтрокаРабВремя.ВремяНачала = ОкончаниеРабДня; 
			
			НоваяСтрока = ИтоговаяТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРабВремя);			
		КонецЕсли;		
		
	КонецЦикла;
	
	Для Каждого СтрокаРВ ИЗ ИтоговаяТЗ Цикл 	
		стрПараметры = Новый Структура;
		стрПараметры.Вставить("ДеньНедели", СтрокаРВ.ДеньНедели); 
		стрПараметры.Вставить("ВремяОкончания", СтрокаРВ.ВремяОкончания); 
		стрПараметры.Вставить("ВремяНачала", СтрокаРВ.ВремяНачала);
		стрПараметры.Вставить("ДатаДокумента", ДатаДокумента);
		Цена = РассчетСуммыПоСтрокеСервер(стрПараметры);
		СтрокаРВ.Цена = Цена; 
		//СтрокаРВ.Сумма = Сумма; 
		Если КомпенсироватьТолькоПереработки 
			И Не (СтрокаРВ.ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Суббота") 
				ИЛИ СтрокаРВ.ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Воскресенье"))Тогда
			Если СтрокаРВ.ВремяНачала < НачалоРабДня ИЛИ  СтрокаРВ.ВремяОкончания > КонецРабДня Тогда
				СтрокаРВ.ВНачисление = Истина;
			Иначе
				СтрокаРВ.ВНачисление = Ложь;
			КонецЕсли;				
		Иначе
			СтрокаРВ.ВНачисление = Истина;		
		КонецЕсли;
		СтрокаРВ.Количество = (СтрокаРВ.ВремяОкончания - СтрокаРВ.ВремяНачала) / 3600; 
		СтрокаРВ.Сумма = СтрокаРВ.Количество * СтрокаРВ.Цена; 
		//Если СтрокаРВ.Количество = 0 Тогда 
		//	СтрокаРВ.Цена = 0;
		//Иначе
		//	СтрокаРВ.Цена = СтрокаРВ.Сумма / СтрокаРВ.Количество;
		//КонецЕсли;
	КонецЦикла;
	
	ТЗЧасы = ИтоговаяТЗ;
	
КонецПроцедуры

Функция СоздатьОбновитьДокументРабочееВремя(ДокументСсылка, ПроектСсылка, СотрудникСсылка, ссылкаТСД, стрПараметры) Экспорт 
	Если ДокументСсылка = Неопределено Тогда
		ДокументОбъект = МП_ОбщегоНазначения.ПолучитьСоздатьДокументПоГуид(стрПараметры.Документ.УИД, стрПараметры.Документ.ИмяМетаданных); 
		//ДокументОбъект = Документы.РабочееВремя.СоздатьДокумент();	
	Иначе
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();	
	КонецЕсли;
	ДокументОбъект.Дата = ТекущаяДата();
	ДокументОбъект.Сотрудник = СотрудникСсылка.Сотрудник;//ПараметрыСеанса.ТекущийПользователь.Сотрудник;
	ДокументОбъект.Проект = ПроектСсылка;
	ДокументОбъект.Согласовано = Ложь;
	ДокументОбъект.Комментарий = стрПараметры.Комментарий;
	ДокументОбъект.ТСД = ссылкаТСД; 
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РабочееВремя") Тогда
		ДокументОбъект.КомпенсироватьТолькоПереработки = ДокументОбъект.Сотрудник.КомпенсироватьТолькоПереработки;	
		ДокументОбъект.ТабельРабочегоВремени.Очистить();
		НоваяСтрокаРабВремя = ДокументОбъект.ТабельРабочегоВремени.Добавить();
		НоваяСтрокаРабВремя.Дата = ТекущаяДата();
		НоваяСтрокаРабВремя.ДеньНедели = ПолучитьДеньНеделиПоДате(НоваяСтрокаРабВремя.Дата);
		НоваяСтрокаРабВремя.ВремяНачала = стрПараметры.ВремяНачала;	
		НоваяСтрокаРабВремя.ВремяОкончания = стрПараметры.ВремяОкончания;

		ТаблицаДанных = ДокументОбъект.ТабельРабочегоВремени.Выгрузить();
		УправлениеРабочимВременем.РаздробитьСтрокиКТЗНаРабочиеЧасы(ТаблицаДанных, ДокументОбъект.КомпенсироватьТолькоПереработки, ДокументОбъект.Дата);
		ДокументОбъект.ТабельРабочегоВремени.Загрузить(ТаблицаДанных);
	Иначе
		ДокументОбъект.Товары.Очистить();
		Для Каждого Товар ИЗ стрПараметры.Товары Цикл 
			НовыйТовар = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйТовар, Товар); 
			НовыйТовар.НаКомпенсацию = Истина;
		КонецЦикла;
	КонецЕсли;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Возврат ДокументОбъект.Ссылка;
КонецФункции
