Функция ПолучитьИДНовогоЭлементаВТаблице(Таблица, Поле, СтрокаСоединения)
	Перем ЗначениеВозврата;
	ЗапросSQL = "SELECT MAX(" + Таблица + "." + Поле + ") AS id FROM " + Таблица;
	стрПоля = Новый Структура("id", "id");
	ТЗ = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьВыборкуВODBC(ЗапросSQL, стрПоля, СтрокаСоединения);
	Если ТЗ.Количество() > 0 Тогда
		строкаТЗ = ТЗ[0];	
		ID = строкаТЗ.id;
		Если ID = null Тогда
			ID = 0;
		КонецЕсли;
		ЧислоID = ОбщегоНазначения.ПривестиСтрокуКЧислу(ID, Истина);
		ЗначениеВозврата = ЧислоID + 1; 	
	КонецЕсли;
	Возврат ЗначениеВозврата;
КонецФункции

Процедура СинхронизироватьКонтрагентаСFM(НомерFM = 0, стрПараметры) Экспорт 
	Если НомерFM > 0 Тогда
		Если КонтрагентЕстьВFM(НомерFM, стрПараметры) Тогда
			ОбновитьКонтрагентаВFM(НомерFM, стрПараметры);	
		Иначе			
			//Сообщить("Не удалось обнаружить контрагента с id=" + Строка(НомерFM) + " в базе FM");
			СоздатьКонтрагентаВFM(НомерFM, стрПараметры);
		КонецЕсли;		
	Иначе
		СоздатьКонтрагентаВFM(НомерFM, стрПараметры);	
	КонецЕсли;
	
КонецПроцедуры

Процедура СинхронизироватьСчетПокупателяСFM(СчетОбъект) Экспорт 
	НомерFM = СчетОбъект.НомерFM;
	Если НомерFM > 0 Тогда
		Если СчетПокупателяЕстьВFM(НомерFM, СчетОбъект) Тогда
			ОбновитьСчетПокупателяВFM(НомерFM, СчетОбъект);	
		Иначе			
			Сообщить("Не удалось обнаружить счет покупателя с id=" + Строка(НомерFM) + " в базе FM");
		КонецЕсли;		
	Иначе
		СоздатьСчетПокупателяВFM(СчетОбъект);	
	КонецЕсли;

КонецПроцедуры

Функция СчетПокупателяЕстьВFM(НомерFM, СчетОбъект)
	ЗначениеВозврата = Ложь;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(СчетОбъект.Организация);
	ЗапросSQL = "SELECT ""Invoice ID"" AS id FROM Invoices Where ""Invoice ID""=" + Формат(НомерFM, "ЧГ=");
	стрПоля = Новый Структура("НомерFM", "id");
	ТЗ = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьВыборкуВODBC(ЗапросSQL, стрПоля, СтрокаСоединения);
	Если ТЗ.Количество() > 0 Тогда 
		ЗначениеВозврата = Истина
	КонецЕсли;
		
	Возврат ЗначениеВозврата	
КонецФункции

Функция КонтрагентЕстьВFM(НомерFM, стрПараметры)
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(стрПараметры.Организация);
	ЗначениеВозврата = Ложь;
	ЗапросSQL = "SELECT ""CUSTOMER ID MATCH FIELD"" AS id FROM Customers Where ""CUSTOMER ID MATCH FIELD""=" + Формат(НомерFM, "ЧГ=");
	стрПоля = Новый Структура("НомерFM", "id");
	ТЗ = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьВыборкуВODBC(ЗапросSQL, стрПоля, СтрокаСоединения);
	Если ТЗ.Количество() > 0 Тогда 
		ЗначениеВозврата = Истина
	КонецЕсли;
		
	Возврат ЗначениеВозврата	
КонецФункции

Функция ОбновитьКонтрагентаВFM(НомерFM, стрПараметры)
	//ЗначениеВозврата = Истина;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(стрПараметры.Организация);
	ЗапросSQL = "SELECT Company AS name, INN as inn  FROM Customers Where ""CUSTOMER ID MATCH FIELD""=" + Формат(НомерFM, "ЧГ=");
	стрПоля = Новый Структура("ПолноеНаименование, ИНН", "name",  "inn");
	ТЗ = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьВыборкуВODBC(ЗапросSQL, стрПоля, СтрокаСоединения);	
	Если ТЗ.Количество() > 0 Тогда 
		строкаКлиент = ТЗ[0];
		Если Не строкаКлиент.ПолноеНаименование = стрПараметры.ПолноеНаименование 
			ИЛИ НЕ строкаКлиент.ИНН = стрПараметры.ИНН Тогда
			ЗапросSQL = "UPDATE Customers SET Company='" + стрПараметры.ПолноеНаименование + "', INN='" + стрПараметры.ИНН +"' Where ""CUSTOMER ID MATCH FIELD""=" + Формат(НомерFM, "ЧГ=");
			ЗначениеВозврата = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQL, СтрокаСоединения);
			Если Не ЗначениеВозврата Тогда
				Сообщить("Не удалось обновить данные по контрагенту " + стрПараметры.ПолноеНаименование);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Сообщить("Не удалось обнаружить контрагента с id=" + Строка(НомерFM));	
	КонецЕсли;	
КонецФункции

Функция ОбновитьСчетПокупателяВFM(НомерFM, СсылкаЗаказ)
	//Возврат Неопределено;
	ЗначениеВозврата = Ложь;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(СсылкаЗаказ.Организация);
	ЗапросSQL = "SELECT Summary FROM Invoices Where ""Invoice ID""=" + Формат(СсылкаЗаказ.НомерFM, "ЧГ=");
	стрПоля = Новый Структура("Комментарий", "Summary");
	ТЗ = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьВыборкуВODBC(ЗапросSQL, стрПоля, СтрокаСоединения);	
	Если ТЗ.Количество() > 0 Тогда 
		строкаЗаказ = ТЗ[0];
		Если Не строкаЗаказ.Комментарий = СсылкаЗаказ.Комментарий Тогда
			ЗапросSQL = "UPDATE Invoices SET Summary='" + СсылкаЗаказ.Комментарий + "' Where ""Invoice ID""=" + Формат(СсылкаЗаказ.НомерFM, "ЧГ=");
			ЗначениеВозврата = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQL, СтрокаСоединения);
			Если Не ЗначениеВозврата Тогда
				Сообщить("Не удалось обновить данные по заказу покупателя " + СсылкаЗаказ);
			КонецЕсли;
		КонецЕсли;
		ЗапросSQLУдалениеТовара = "DELETE FROM ""Invoice Data"" WHERE ""INVOICE ID MATCH FIELD""=" + Формат(СсылкаЗаказ.НомерFM, "ЧГ=");
		ЗначениеВозврата = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQLУдалениеТовара, СтрокаСоединения);
		НомерFM = СсылкаЗаказ.НомерFM;
		Для Каждого Товар ИЗ СсылкаЗаказ.Товары Цикл 
			ЗапросSQLТовар = "Insert Into ""Invoice Data"" (""INVOICE ID MATCH FIELD"", Item, Qty ,""Unit Price"", service) Values (" + Формат(НомерFM, "ЧГ=") + ",'" + Товар.Наименование + "'," + Формат(Товар.Количество, "ЧРД=.; ЧГ=") + "," + Формат(Товар.Цена + (Товар.Цена / 100 * Товар.Наценка) , "ЧРД=.; ЧГ=") + ", " + ?(Товар.Услуга, "1", "0") + ")";
		    РезультатДобавления = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQLТовар, СтрокаСоединения);		
		КонецЦикла;
	КонецЕсли;
		
	Возврат ЗначениеВозврата;	
КонецФункции

Функция СоздатьКонтрагентаВFM(НомерFM, стрПараметры)
	ЗначениеВозврата = Ложь;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(стрПараметры.Организация);
	Если НомерFM = 0 Тогда
		ИДНовогоЭлемента = ПолучитьИДНовогоЭлементаВТаблице("Customers", """CUSTOMER ID MATCH FIELD""", СтрокаСоединения);
	Иначе
		ИДНовогоЭлемента = НомерFM;	
	КонецЕсли;
	ЗапросSQL = "Insert Into Customers (""CUSTOMER ID MATCH FIELD"", Company, INN) Values (" + Формат(ИДНовогоЭлемента, "ЧГ=") + ",'" + стрПараметры.ПолноеНаименование + "','" + стрПараметры.ИНН + "')";
	//ЗапросSQL = "INSERT INTO AS name, INN as inn  FROM Customers Where ""CUSTOMER ID MATCH FIELD""=" + Формат(НомерFM, "ЧГ=");
	ЗначениеВозврата = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQL, СтрокаСоединения);
	Если Не ЗначениеВозврата Тогда
		Сообщить("Не удалось создать контрагента в FM, наименование " + стрПараметры.ПолноеНаименование);
	Иначе
		НомерFM = ИДНовогоЭлемента;	
	КонецЕсли;	
	Возврат ЗначениеВозврата;	
КонецФункции

Функция СоздатьСчетПокупателяВFM(СчетОбъект)
	ЗначениеВозврата = Ложь;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(СчетОбъект.Организация);
	ИДНовогоЭлемента = ПолучитьИДНовогоЭлементаВТаблице("Invoices", """Invoice ID""", СтрокаСоединения);
	ЗапросSQL = "Insert Into Invoices (""Invoice ID"", ""CUSTOMER ID MATCH FIELD"", Summary) Values (" + Формат(ИДНовогоЭлемента, "ЧГ=") + "," + Формат(СчетОбъект.Контрагент.НомерFM, "ЧГ=") + ",'" + СчетОбъект.Комментарий + "')";
	ЗначениеВозврата = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQL, СтрокаСоединения);
	Если Не ЗначениеВозврата Тогда
		Сообщить("Не удалось создать заказ покупателя в FM, " + СчетОбъект);
		Возврат ЗначениеВозврата;	
	КонецЕсли;
	СчетОбъект.НомерFM = ИДНовогоЭлемента;	
	Для Каждого Товар ИЗ СчетОбъект.Товары Цикл 
		ЗапросSQLТовар = "Insert Into ""Invoice Data"" (""INVOICE ID MATCH FIELD"", Item, Qty ,""Unit Price"", service) Values (" + Формат(ИДНовогоЭлемента, "ЧГ=") + ",'" + Товар.Наименование + "'," + Формат(Товар.Количество, "ЧГ=") + "," + Формат(Товар.Цена, "ЧГ=") + ", " + ?(Товар.Услуга, "1", "0") + ")";
	    РезультатДобавления = ИнтеграцияСВнешнимиСистемамиСервер.ВыполнитьОперацияODBC(ЗапросSQLТовар, СтрокаСоединения);		
	КонецЦикла;
	Возврат ЗначениеВозврата;	
КонецФункции