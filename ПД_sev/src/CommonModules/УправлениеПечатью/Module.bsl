// Сохраняет пользовательский макет печати в информационной базе.
Процедура ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище, ОбъектВладелец = Неопределено, РедактированиеСтарогоМакета) Экспорт
	Макет = ПолучитьИзВременногоХранилища(АдресМакетаВоВременномХранилище);
	
	ЧастиИмени = СтрРазделить(ИмяОбъектаМетаданныхМакета, ".");
	Если ЧастиИмени.Количество() > 1 Тогда 
		ИмяМакета = ЧастиИмени[ЧастиИмени.ВГраница()];	
		ИмяВладельца = "";
		Для НомерЧасти = 0 По ЧастиИмени.ВГраница()-1 Цикл
			Если Не ПустаяСтрока(ИмяВладельца) Тогда
				ИмяВладельца = ИмяВладельца + ".";
			КонецЕсли;
			ИмяВладельца = ИмяВладельца + ЧастиИмени[НомерЧасти];
		КонецЦикла;
	Иначе
		ИмяМакета = ИмяОбъектаМетаданныхМакета;	
		ИмяВладельца = ИмяОбъектаМетаданныхМакета;
	КонецЕсли;
	Если Не ОбъектВладелец = Неопределено И РедактированиеСтарогоМакета Тогда
		НаборЗаписей = РегистрыСведений.ПользовательскиеМакетыПечати.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектВладелец.Установить(ОбъектВладелец);
		НаборЗаписей.Отбор.ИмяМакета.Установить(ИмяМакета);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда 
			Запись = НаборЗаписей[0];
		Иначе
			Запись = НаборЗаписей.Добавить();
		КонецЕсли;
		Запись.Объект = ИмяВладельца;
		Запись.ОбъектВладелец = ОбъектВладелец;
		Запись.ИмяМакета = ИмяМакета;
		Запись.Использование = Истина;
		Запись.Макет = Новый ХранилищеЗначения(Макет, Новый СжатиеДанных(9));
		НаборЗаписей.Записать();

	Иначе
		Запись = РегистрыСведений.ПользовательскиеМакетыПечати.СоздатьМенеджерЗаписи();
		Запись.Объект = ИмяВладельца;
		Запись.ОбъектВладелец = ОбъектВладелец;
		Запись.ИмяМакета = ИмяМакета;
		Запись.Использование = Истина;
		Запись.Макет = Новый ХранилищеЗначения(Макет, Новый СжатиеДанных(9));
		Запись.Записать(Ложь);			
	КонецЕсли;
КонецПроцедуры

// Возвращает макет печатной формы по полному пути к макету.
//
// Параметры:
//  ПолныйПутьКМакету - Строка - полный путь к макету в формате:
//								"Документ.<ИмяДокумента>.<ИмяМакета>"
//								"Обработка.<ИмяОбработки>.<ИмяМакета>"
//								"ОбщийМакет.<ИмяМакета>".
// Возвращаемое значение:
//   ТабличныйДокумент - для макета типа MXL.
//	 ДвоичныеДанные    - для макетов DOC и ODT.
//
Функция МакетПечатнойФормы(ПолныйПутьКМакету) Экспорт
	
	ЧастиПути = СтрЗаменить(ПолныйПутьКМакету, ".", Символы.ПС);
	
	Если СтрЧислоСтрок(ЧастиПути) = 3 Тогда
		ПутьКМетаданным = СтрПолучитьСтроку(ЧастиПути, 1) + "." + СтрПолучитьСтроку(ЧастиПути, 2);
		ПутьКОбъектуМетаданных = СтрПолучитьСтроку(ЧастиПути, 3);
	ИначеЕсли СтрЧислоСтрок(ЧастиПути) = 2 Тогда
		ПутьКМетаданным = СтрПолучитьСтроку(ЧастиПути, 1);
		ПутьКОбъектуМетаданных = СтрПолучитьСтроку(ЧастиПути, 2);
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Макет ""%1"" не найден. Операция прервана.'"), ПолныйПутьКМакету);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ Макет КАК Макет, Использование КАК Использование
					|ИЗ
					|	РегистрСведений.ПользовательскиеМакетыПечати
					|ГДЕ
					|	Объект=&Объект
					|	И	ИмяМакета=&ИмяМакета
					|	И	Использование";
	
	Запрос.Параметры.Вставить("Объект", ПутьКМетаданным);
	Запрос.Параметры.Вставить("ИмяМакета", ПутьКОбъектуМетаданных);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = Неопределено;
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.Макет.Получить();
	Иначе
		Если СтрЧислоСтрок(ЧастиПути) = 3 Тогда
			Результат = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПутьКМетаданным).ПолучитьМакет(ПутьКОбъектуМетаданных);
		Иначе
			Результат = ПолучитьОбщийМакет(ПутьКОбъектуМетаданных);
		КонецЕсли;
	КонецЕсли;
	
	Если Результат = Неопределено Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Макет ""%1"" не найден. Операция прервана.'"), ПолныйПутьКМакету);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

Функция ПОлучитьТабДокПользовательскогоМакета(ИмяМакета, ОбъектВладелец) Экспорт 
	Перем ЗначениеВозврата;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользовательскиеМакетыПечати.Макет КАК Макет
	               |ИЗ
	               |	РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
	               |ГДЕ
	               |	ПользовательскиеМакетыПечати.ИмяМакета = &ИмяМакета
	               |	И ПользовательскиеМакетыПечати.ОбъектВладелец = &ОбъектВладелец";
	Запрос.УстановитьПараметр("ИмяМакета", ИмяМакета);
	Запрос.УстановитьПараметр("ОбъектВладелец", ОбъектВладелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		ЗначениеВозврата = Выборка.Макет.Получить();	
	КонецЕсли;
	
	Возврат ЗначениеВозврата
КонецФункции // ПОлучитьТабДокПользовательскогоМакета()
