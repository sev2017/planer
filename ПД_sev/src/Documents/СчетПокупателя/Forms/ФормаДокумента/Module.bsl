
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеКонстанты("УПОсновнаяОрганизация");
		КонецЕсли;
	КонецЕсли;
	ПересчитатьТабличнуюЧасть();
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	ПолучитьДанныеПоТоваруИзFMКлиент();
	//КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура ПолучитьДанныеПоТоваруИзFMКлиент() Экспорт
//	РезультатВыполнения = ПолучитьТаблицуТоваровВФоне();
//	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
//	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
// 	ПараметрыОжидания.Интервал = 2;	    
//    ДлительныеОперацииКлиент.ОжидатьЗавершение(
//        РезультатВыполнения,
//        Новый ОписаниеОповещения("ОбработатьПолучениеТаблицыТоваровКлиент", ЭтотОбъект),
//        ПараметрыОжидания);		
//КонецПроцедуры

//&НаКлиенте
//Процедура ОбработатьПолучениеТаблицыТоваровКлиент(Результат, ДополнительныеПараметры) Экспорт
//	ОбработатьПолучениеТаблицыТоваровСервер(Результат, ДополнительныеПараметры);
//КонецПроцедуры

//&НаСервере
//Процедура ОбработатьПолучениеТаблицыТоваровСервер(Результат, ДополнительныеПараметры) Экспорт 
//	Если Результат.Статус = "Ошибка" Тогда
//		Сообщить(Результат.КраткоеПредставлениеОшибки);
//		Возврат
//	КонецЕсли;
//	ТаблицаFM = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
//	ЗначениеВРеквизитФормы(ТаблицаFM, "ТаблицаТоваров");
//КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуТоваровВФоне()
			
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);	
	ИдентификаторЗадания = Неопределено;
	
	СтруктураПараметровПроцедуры = Новый Структура;	
	СтруктураПараметровПроцедуры.Вставить("НомерСчета", Объект.Номер);	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		// здесь должен быть вызов нашей процедуры
		РезультатВыполнения = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
    	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получить данные по товарам из FM'");		
		
		РезультатВыполнения  = ДлительныеОперации.ВыполнитьВФоне( 
		"УправлениеДокументамиСервер.ПолучитьТаблицуТоваровИзFM", 
		СтруктураПараметровПроцедуры, 
		ПараметрыВыполнения);	

	КонецЕсли;
		
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПересчитатьТабличнуюЧасть()
	Для Каждого СтрокаТовары ИЗ Объект.Товары Цикл 
		ПересчитатьСтроку(СтрокаТовары);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтроку(ТекСтрока)
	ТекСтрока.Сумма = (ТекСтрока.Цена + ?(НЕ ТекСтрока.Наценка = 0, (ТекСтрока.Цена / 100) * ТекСтрока.Наценка, 0)) * ТекСтрока.Количество; 
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументы(Команда)
	Перем ПоДоверенности;
	Если Не Объект.Ссылка.Пустая() И Не Модифицированность Тогда		
		Если ПустаяСтрока(ОбщегоНазначения.ПолучитьЗначениРеквизитаОбъекта(Объект.Контрагент, "ИНН")) Тогда
			Сообщить("У контрагента " + Объект.Контрагент + " не заполнен ИНН, генерация документов возможна только при заполненном ИНН!", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		ТекСотрудник = ОбщегоНазначенияПовтИсп.ПолучитьТекущегоСотрудника(); 
		Доверенность = УправлениеПользователями.ПолучитьДовереностьПользователя(ТекСотрудник, Объект.Организация); 
		Если Не Доверенность = Неопределено Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Ответ = Вопрос("Распечатать по доверенности на сотрудника " + ТекСотрудник + "?", Режим, 0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
			    ПоДоверенности = ТекСотрудник; 
			КонецЕсли; 
		КонецЕсли;
		//ВызватьИсключение("Стоп!");
		РезультатВыполнения = ПроверитьНаличиеДокументаВоВнешнейБазеСервер(Объект.Ссылка, ПоДоверенности);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	 	ПараметрыОжидания.Интервал = 2;	    
	    ДлительныеОперацииКлиент.ОжидатьЗавершение(
	        РезультатВыполнения,
	        Новый ОписаниеОповещения("ОбработатьПолучениеДанныхОНаличииДокументаВоВнешнейБД", ЭтотОбъект, ПоДоверенности),
	        ПараметрыОжидания);				
	Иначе
		Сообщить("Перед получение документов необходимо записать документ!", СтатусСообщения.Важное);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеДокументаВоВнешнейБазеСервер(СсылкаСчет, СотрудникПоДоверенности = Неопределено)
			
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);	
	ИдентификаторЗадания = Неопределено;
	
	СтруктураПараметровПроцедуры = Новый Структура;	
	СтруктураПараметровПроцедуры.Вставить("СсылкаСчет", СсылкаСчет);
	Если Не СотрудникПоДоверенности = Неопределено Тогда 
		стрДоверенность = Новый Структура;
		стрДоверенность.Вставить("ФИОГлавногоБухгалтера", Строка(СотрудникПоДоверенности));		
		стрДоверенность.Вставить("ФИОРуководителя",  Строка(СотрудникПоДоверенности));
		стрДоверенность.Вставить("Доверенность", УправлениеПользователями.ПолучитьДовереностьПользователя(СотрудникПоДоверенности, Объект.Организация));
		СтруктураПараметровПроцедуры.Вставить("ПоДоверенности", стрДоверенность);
	КонецЕсли;
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		// здесь должен быть вызов нашей процедуры
		РезультатВыполнения = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
    	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверить наличие документа Счет во внешней БД'");		
		
		РезультатВыполнения  = ДлительныеОперации.ВыполнитьВФоне( 
		"УправлениеДокументамиСервер.ПроверитьНаличиеСформированногоДокументаВоВнешнейБД", 
		СтруктураПараметровПроцедуры, 
		ПараметрыВыполнения);	

	КонецЕсли;
		
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьПолучениеДанныхОНаличииДокументаВоВнешнейБД(Результат, ДополнительныеПараметры) Экспорт
	Если Результат.Статус = "Ошибка" Тогда
		Сообщить(Результат.ПодробноеПредставлениеОшибки);
		Возврат
	КонецЕсли;
	стрПараметры = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	стрПараметры.Вставить("ПоДоверенности", ДополнительныеПараметры);
	//стрПараметры.Вставить("булДокументыСформированы", УправлениеДокументамиСервер.ПроверитьНаличиеСформированногоДокументаВоВнешнейБД(ТакДанные.Ссылка));
	ОткрытьФорму("Документ.СчетПокупателя.Форма.ФормаСписокГенерированныхДокументов", стрПараметры, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИЗFM(Команда)
	ОбновитьТабличнуюЧастьИзFMСервер(Объект.НомерFM);
КонецПроцедуры

&НаСервере
Процедура ОбновитьТабличнуюЧастьИзFMСервер(НомерСчета)
	ТЗТовары = Неопределено;
	//УникальныйИдентификатор = Новый УникальныйИдентификатор;
	СтрокаСоединения = ОбщегоНазначенияПовтИсп.ПолучитьСтрокуСоединенияFM(Объект.Организация);
	АдресТаблицы = ПоместитьВоВременноеХранилище(ТЗТовары, УникальныйИдентификатор);
	УправлениеДокументамиСервер.ПолучитьТаблицуТоваровИзFM(Новый Структура("НомерСчета", НомерСчета), АдресТаблицы, СтрокаСоединения); 
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресТаблицы);
	Объект.Товары.Очистить();
	Для Каждого СтрокаТовар ИЗ ТаблицаТоваров Цикл 
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовар);
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Изменил = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПараметраСеанса("ТекущийПользователь");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	РаботаСФормамиКлиент.ОповеститьПослеЗаписиФормы("ЗаписьНаФорме", Объект.Ссылка, Новый Структура("Проект", Объект.Проект));
КонецПроцедуры

&НаСервере
Функция ПечатьСчетаНаСервере(ПоДоверенности)
	ТабДок = Документы.СчетПокупателя.ПечатьСчетНаОплату(Объект.Ссылка, ПоДоверенности, Истина);
	Возврат ПоместитьВоВременноеХранилище(ТабДок, УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПечатьСчета(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Сообщить("Печать счета возможна только из записанного документа!");
		Возврат
	КонецЕсли;
	ТекСотрудник = ОбщегоНазначенияПовтИсп.ПолучитьТекущегоСотрудника(); 
	Доверенность = УправлениеПользователями.ПолучитьДовереностьПользователя(ТекСотрудник, Объект.Организация); 
	Если Не Доверенность = Неопределено Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос("Распечатать по доверенности на сотрудника " + ТекСотрудник + "?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
		    ПоДоверенности = ТекСотрудник; 
		КонецЕсли; 
	КонецЕсли;

	
	АдресТабДок = ПечатьСчетаНаСервере(ПоДоверенности);
	ТабДок = ПолучитьИзВременногоХранилища(АдресТабДок);
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНаценкаПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтроку(ТекСтрока);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформлениеСервер();
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСервер()
	Элементы.Оплачен.Доступность = РольДоступна("ПолныеПрава");
	Элементы.ДокументыСформированы.Доступность = РольДоступна("ПолныеПрава");
	Если Не РольДоступна("ПолныеПрава") Тогда
		Элементы.Отменен.Доступность = НЕ (Объект.Оплачен ИЛИ Объект.ДокументыСформированы);	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СчетПокупателяДокументыСформированны" 
		И Объект.Ссылка = Параметр Тогда
		Объект.ДокументыСформированы = Истина;
		Записать(Новый Структура("РежимЗаписиДокумента", РежимЗаписиДокумента.Проведение));
		ОбновитьОтображениеДанных();
		УстановитьУсловноеОформлениеСервер()		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Объект.НомерFM = Неопределено;
КонецПроцедуры

