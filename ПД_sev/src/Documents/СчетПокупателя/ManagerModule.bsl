Функция ПечатьСчетНаОплату(СсылкаСчет, ПоДоверенности = Неопределено, СПечатью = Ложь) Экспорт 
	Макет = ПолучитьМакет("ПФ_MXL_СчетЗаказ");
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплату";	

	ШапкаЗапрос = Новый Запрос;
	ШапкаЗапрос.Текст ="ВЫБРАТЬ
	                   |	СчетПокупателя.Контрагент КАК Контрагент,
	                   |	СчетПокупателя.Контрагент.ПолноеНаименование КАК ПредставлениеПолучателя,
	                   |	СчетПокупателя.Организация КАК Организация,
	                   |	СчетПокупателя.Организация.ПолноеНаименование КАК ПредставлениеПоставщика,
	                   //|	СчетПокупателя.Представление КАК ТекстЗаголовка,
	                   |	СчетПокупателя.Организация.БанкПолучателя КАК БанкПолучателя,
	                   |	СчетПокупателя.Организация.БИКБанкаПолучателя КАК БИКБанкаПолучателя,
	                   |	СчетПокупателя.Организация.СчетБанкаПолучателя КАК СчетБанкаПолучателя,
	                   |	СчетПокупателя.Организация.СчетПолучателя КАК СчетПолучателя,
	                   |	СчетПокупателя.Организация.ИНН КАК ИНН,
	                   |	СчетПокупателя.Организация.КПП КАК КПП,
					   |	СчетПокупателя.Контрагент.КПП КАК КПППолучатель,
					   |	СчетПокупателя.Контрагент.ИНН КАК ИННПолучатель,
	                   |	СчетПокупателя.Организация.ФИОРуководителя КАК ФИОРуководителя,
	                   |	СчетПокупателя.Организация.ФИОБухгалтера КАК ФИОБухгалтера,
	                   |	СчетПокупателя.Организация.ЮридическийАдрес КАК ЮридическийАдрес,
					   |	СчетПокупателя.Контрагент.ЮридическийАдрес КАК ЮридическийАдресПолучатель,
	                   |	СчетПокупателя.Товары.(
	                   |		Ссылка КАК Ссылка,
	                   |		НомерСтроки КАК НомерСтроки,
	                   |		Наименование КАК Товар,
	                   |		Количество КАК Количество,
	                   |		ВЫРАЗИТЬ(СчетПокупателя.Товары.Сумма / СчетПокупателя.Товары.Количество КАК ЧИСЛО(10, 2)) КАК Цена,
	                   |		Сумма КАК Сумма,
	                   |		Услуга КАК Услуга
	                   |	) КАК Товары,
	                   |	СчетПокупателя.СуммаДокумента КАК СуммаДокумента,
	                   |	СчетПокупателя.Организация.ФИОРуководителя КАК ОрганизацияФИОРуководителя,
	                   |	СчетПокупателя.Организация.ФИОБухгалтера КАК ОрганизацияФИОБухгалтера,
	                   |	СчетПокупателя.НомерFM КАК НомерFM,
	                   |	СчетПокупателя.Дата КАК Дата
	                   |ИЗ
	                   |	Документ.СчетПокупателя КАК СчетПокупателя
	                   |ГДЕ
	                   |	СчетПокупателя.Ссылка = &СсылкаСчет";					   
	ШапкаЗапрос.УстановитьПараметр("СсылкаСчет", СсылкаСчет);
	ВыборкаШапка = ШапкаЗапрос.Выполнить().Выбрать();
	Если ВыборкаШапка.Следующий() Тогда
		ОбластьШапка = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ОбластьШапка.Параметры.Заполнить(ВыборкаШапка);
		ОбластьШапка.Параметры.ТекстЗаголовка = "Счет покупателя " + ВыборкаШапка.НомерFM + " от " + Формат(ВыборкаШапка.Дата,"ДФ=dd.MM.yyyy"); 
		ОбластьШапка.Параметры.ПредставлениеПоставщика = ВыборкаШапка.ПредставлениеПоставщика + ", ИНН " + ВыборкаШапка.ИНН + ", КПП " + ВыборкаШапка.КПП + ", " + ВыборкаШапка.ЮридическийАдрес;
		ОбластьШапка.Параметры.ПредставлениеПолучателя = ВыборкаШапка.ПредставлениеПолучателя + ", ИНН " + ВыборкаШапка.ИННПолучатель + ", КПП " + ВыборкаШапка.КПППолучатель + ", " + ВыборкаШапка.ЮридическийАдресПолучатель;
		ТабДок.Вывести(ОбластьШапка);
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДок.Вывести(ОбластьШапкаТаблицы);		
		
		ВыборкаТовары = ВыборкаШапка.Товары.Выбрать();
		КоличествоНаименований = 0;
		Пока ВыборкаТовары.Следующий() Цикл 
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		    ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьСтрока);	
			КоличествоНаименований = КоличествоНаименований + 1;
		КонецЦикла;
		ОбластьИтог = Макет.ПолучитьОбласть("Итого");
		ОбластьИтог.Параметры.Всего = ВыборкаШапка.СуммаДокумента;
		ТабДок.Вывести(ОбластьИтог);
		
		ОбластьИтогНДС = Макет.ПолучитьОбласть("ИтогоНДС");
		ОбластьИтогНДС.Параметры.НДС = "В том числе НДС:";
		ОбластьИтогНДС.Параметры.ВсегоНДС =  Формат(ВыборкаШапка.СуммаДокумента -  ВыборкаШапка.СуммаДокумента / 1.18, "ЧДЦ=2");
		ТабДок.Вывести(ОбластьИтогНДС);
		
		ОбластьИтогСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьИтогСуммаПрописью.Параметры.ИтоговаяСтрока = "Всего наименований " + Строка(КоличествоНаименований) + ", на сумму " + Формат(ВыборкаШапка.СуммаДокумента, "ЧДЦ=2") + " руб.";		
		ПараметрыПрописиНаРусском = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
		ОбластьИтогСуммаПрописью.Параметры.СуммаПрописью = ЧислоПрописью(ВыборкаШапка.СуммаДокумента, ,ПараметрыПрописиНаРусском);
		ТабДок.Вывести(ОбластьИтогСуммаПрописью);
		Если СПечатью Тогда
			Если ВыборкаШапка.Организация = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеСправочникаПОКоду("Организации", "000000002") Тогда 
				ОбластьПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчетаСПечатьюИР");
			ИначеЕсли ВыборкаШапка.Организация = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеСправочникаПОКоду("Организации", "000000001") Тогда 	
				ОбластьПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчетаСПечатьюТР");	
			Иначе
				ОбластьПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчета");	
			КонецЕсли;
		Иначе
			ОбластьПодвалСчета = Макет.ПолучитьОбласть("ПодвалСчета");
		КонецЕсли;
		Если ПоДоверенности = Неопределено Тогда
			ФИОРуководителя = ВыборкаШапка.ФИОРуководителя;
			ФИОБухгалтера = ВыборкаШапка.ФИОБухгалтера;
		Иначе
			ФИОРуководителя = ПоДоверенности;
			ФИОБухгалтера = ПоДоверенности;
			ОбластьПодвалСчета.Параметры.Доверенность = УправлениеПользователями.ПолучитьДовереностьПользователя(ПоДоверенности, ВыборкаШапка.Организация);;
		КонецЕсли;
		ОбластьПодвалСчета.Параметры.ФИОРуководителя = ФИОРуководителя; 
		ОбластьПодвалСчета.Параметры.ФИОБухгалтера = ФИОБухгалтера; 
		ТабДок.Вывести(ОбластьПодвалСчета);
		
		//ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалЗаказа");
		//Если ПоДоверенности = Неопределено Тогда
		//	ФИОИсполнителя = ВыборкаШапка.ФИОРуководителя;
		//Иначе
		//	ФИОИсполнителя = ПоДоверенности;
		//КонецЕсли;
		//ОбластьПодвалЗаказа.Параметры.ФИОИсполнителя = ФИОИсполнителя;
		//ТабДок.Вывести(ОбластьПодвалЗаказа);
	КонецЕсли;
	
	Возврат ТабДок;
КонецФункции

Функция ПолучитьМассивСчетовПоНомеруFM(НомерFM) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СчетПокупателя.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СчетПокупателя КАК СчетПокупателя
	               |ГДЕ
	               |	НЕ СчетПокупателя.ПометкаУдаления
	               |	И СчетПокупателя.НомерFM = &НомерFM
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка";
	Запрос.УстановитьПараметр("НомерFM", НомерFM);
	ТЗДанные = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗДанные.ВыгрузитьКолонку("Ссылка");
КонецФункции

Процедура УстановитьПометкуСчетОплачен(СчетСсылка) Экспорт 
	Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	ОбъектСчет = СчетСсылка.ПолучитьОбъект();
	ОбъектСчет.Оплачен = Истина;
	ОбъектСчет.Записать(РежимЗаписиДокумента.Проведение);
	Если ЗначениеЗаполнено(СчетСсылка.Проект) И ЗначениеЗаполнено(СчетСсылка.Проект.Куратор) Тогда
		Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("Сотрудник",  СчетСсылка.Проект.Куратор);
	ИначеЕсли ЗначениеЗаполнено(СчетСсылка.Изменил) Тогда 
		Пользователь = СчетСсылка.Изменил; 			
	КонецЕсли;

	Если НЕ Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
		И Пользователь.ТелеграмИД > 0 Тогда
		ТекстСообщения = "По счету №" + СчетСсылка.НомерFM + " Контрагент " + СчетСсылка.Контрагент + "(Сумма: " + СчетСсылка.СуммаДокумента + "), получена оплата.";	
		ИнтеграцияСTelegramСервер.СообщениеПользователю(Новый Структура("id", Пользователь.ТелеграмИД), ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьТабДокДолжников(ИмяВарианта) Экспорт 
	//МассивструктурОтбор = Новый Массив;
	//МассивструктурОтбор.Добавить(Новый Структура("ЛевоеЗначение, ВидСравнения, ПравоеЗначение", "Сотрудник", "Равно", ПорогДолга));
	стрТабДок = УправлениеОтчетамиСервер.ПолучитьТабДокИзОтчетаСКД("ВзаиморасчетыСКонтрагентами", "ОсновнаяСхемаКомпоновкиДанных", ИмяВарианта); 
	ОтчетПоПроекту = стрТабДок.ТабДок;	
	Возврат ОтчетПоПроекту;
КонецФункции