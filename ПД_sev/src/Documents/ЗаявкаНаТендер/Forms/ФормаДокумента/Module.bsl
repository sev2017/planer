
&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧасти(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧасти(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧасти(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокуТабличнойЧасти(СтрокаТЧ)
	СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;
	СтрокаТЧ.СуммаНДС = СтрокаТЧ.Сумма - СтрокаТЧ.Сумма / (1 + СтрокаТЧ.СтавкаНДС / 100);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитальДокумент()
	Объект.СуммаДокумента = 0;
	Объект.СуммаНДС = 0;
	Для Каждого СтрокаТЧ ИЗ Объект.Товары Цикл 
		Объект.СуммаДокумента = Объект.СуммаДокумента + СтрокаТЧ.Сумма;
		Объект.СуммаНДС = Объект.СуммаНДС + СтрокаТЧ.СуммаНДС;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	ПересчитальДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.СтавкаНДС) Тогда
		Элемент.ТекущиеДанные.СтавкаНДС = 18;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПечатьДокументовНаСервере(Ссылка, ИтоговаяСумма)	
	 Возврат Документы.ЗаявкаНаТендер.СформироватьПечатныеФормыДокументов(Ссылка, ИтоговаяСумма);
КонецФункции

&НаКлиенте
Процедура ПечатьДокументов(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Сообщить("Перед распечаткой документов необходимо записать документ!", СтатусСообщения.Важное);
		Возврат
	КонецЕсли;
	
	МассивДокументов = ПечатьДокументовНаСервере(Объект.Ссылка, Объект.ИтоговаяСумма);
	Для Каждого Элемент ИЗ МассивДокументов Цикл 
		Элемент.ТабДок.Автомасштаб = Истина;
		Элемент.ТабДок.Показать();	
	КонецЦикла;
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Отправить письмо с pdf файлом на адрес " + Объект.ПочтаПолучателя, Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	//ИмяИтоговогоФайла = СклеитьМассивPDFДокументовВОдин(МассивДокументов);
	//АдресФайл = ""; 
	//ПоместитьФайл(АдресФайл, ИмяИтоговогоФайла,,Ложь, УникальныйИдентификатор);
	//УдалитьФайлы(ИмяИтоговогоФайла);
	ОтправитьПисьмоСВложением(МассивДокументов, Объект.ПочтаПолучателя);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьПисьмоСВложением(МассивДокументов, Получатель) Экспорт 
	стрВложение = Новый Соответствие();
	Для Каждого Элемент ИЗ МассивДокументов Цикл                                          
		ИмяВремФайла = ПолучитьИмяВременногоФайла("pdf");
		Элемент.ТабДок.Записать(ИмяВремФайла, ТипФайлаТабличногоДокумента.PDF);
		стрВложение.Вставить(Элемент.ИмяМакета + ".pdf", Новый ДвоичныеДанные(ИмяВремФайла));
	КонецЦикла;
	РаботаСЭлектроннойПочтойСервер.ОтправитьПочтовоеСообщение("ТЗ",, Получатель, "sev@gks-service.ru", стрВложение); 
КонецФункции // СклеитьМассивPDFДокументовВОдин()

//&НаКлиенте
//Функция СклеитьМассивPDFДокументовВОдин(МассивДокументов) Экспорт 
//	Утилита = """C:\Program Files (x86)\PDFtk\bin\pdftk.exe""";
//	СтрокаКоманды = "";	
//	МассивИменФайлов = Новый Массив;
//	Для Каждого ТабДок ИЗ МассивДокументов Цикл 
//		//ТабДок = Новый ТабличныйДокумент;
//		ИмяВремФайла = ПолучитьИмяВременногоФайла("pdf");
//		ТабДок.Записать(ИмяВремФайла, ТипФайлаТабличногоДокумента.PDF);
//		СтрокаКоманды = СтрокаКоманды + ИмяВремФайла + " "; 
//		МассивИменФайлов.Добавить(ИмяВремФайла);
//	КонецЦикла;
//	ИмяВремФайлаВыходного = ПолучитьИмяВременногоФайла("pdf");
//	ИтоговаяКоманда = Утилита + " " + СтрокаКоманды + "cat output " + ИмяВремФайлаВыходного;  
//	КомандаСистемы(ИтоговаяКоманда);
//	Для Каждого Файл ИЗ МассивИменФайлов Цикл 
//		УдалитьФайлы(Файл);	
//	КонецЦикла;
//	Возврат ИмяВремФайлаВыходного;
//КонецФункции // СклеитьМассивPDFДокументовВОдин()
