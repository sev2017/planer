Функция ПолучитьПараметрыДляЗаполненияПечатныхФорм(Ссылка, ИтоговаяСумма) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТендерТовары.Ссылка КАК Ссылка,
	               |	ЗаявкаНаТендерТовары.НомерСтроки КАК НомерСтроки,
	               |	ЗаявкаНаТендерТовары.Номенклатура КАК Номенклатура,
				   |	ЗаявкаНаТендерТовары.НаименованиеПоТЗ КАК НаименованиеПоТЗ,
	               |	ЗаявкаНаТендерТовары.Цена КАК Цена,
	               |	ЗаявкаНаТендерТовары.Количество КАК Количество,
	               |	ЗаявкаНаТендерТовары.Сумма КАК Сумма,
	               |	ЗаявкаНаТендерТовары.СтавкаНДС КАК СтавкаНДС,
	               |	ЗаявкаНаТендерТовары.СуммаНДС КАК СуммаНДС
	               |ИЗ
	               |	Документ.ЗаявкаНаТендер.Товары КАК ЗаявкаНаТендерТовары
	               |ГДЕ
	               |	ЗаявкаНаТендерТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЗТовары = Запрос.Выполнить().Выгрузить();
	Если ИтоговаяСумма > 0 Тогда
		МассивКолонок = ТЗТовары.ВыгрузитьКолонку("Сумма");
		МассивСумм = ОбщегоНазначения.РаспределитьПропорционально(ИтоговаяСумма, МассивКолонок);
		ТЗТовары.ЗагрузитьКолонку(МассивСумм, "Сумма");
	КонецЕсли;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТендерТовары.Ссылка КАК Ссылка,
	               |	ЗаявкаНаТендерТовары.НомерСтроки КАК НомерСтроки,
	               |	ЗаявкаНаТендерТовары.Номенклатура КАК Номенклатура,
	               |	ЗаявкаНаТендерТовары.Сумма / ЗаявкаНаТендерТовары.Количество КАК Цена,
	               |	ЗаявкаНаТендерТовары.Количество КАК Количество,
	               |	ЗаявкаНаТендерТовары.Сумма КАК Сумма,
	               |	ЗаявкаНаТендерТовары.СтавкаНДС КАК СтавкаНДС,
	               |	ЗаявкаНаТендерТовары.Сумма - ЗаявкаНаТендерТовары.Сумма / (1 + ЗаявкаНаТендерТовары.СтавкаНДС / 100) КАК СуммаНДС,
	               |	ЗаявкаНаТендерТовары.НаименованиеПоТЗ КАК НаименованиеПоТЗ
	               |ПОМЕСТИТЬ Товары
	               |ИЗ
	               |	&Товары КАК ЗаявкаНаТендерТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.НомерСтроки КАК НомерСтроки,
	               |	Товары.Номенклатура КАК НаименованиеТовара,
	               |	Товары.НаименованиеПоТЗ КАК НаименованиеПоТЗ,
	               |	Товары.Количество КАК Количество,
	               |	Выразить(Товары.Цена КАК Число(10,2)) КАК ЦенаСНДС,
	               |	Выразить((Товары.Сумма - Товары.СуммаНДС) / Товары.Количество КАК Число(10,2)) КАК ЦенаБезНДС,
	               |	Выразить(Товары.Сумма - Товары.СуммаНДС КАК Число(10,2)) КАК СуммаБезНДС,
	               |	Товары.СуммаНДС КАК СуммаНДС,
	               |	Товары.Сумма КАК СуммаСНДС,
	               |	Товары.СтавкаНДС КАК СтавкаНДС
	               |ИЗ
	               |	Товары КАК Товары";
	Запрос.УстановитьПараметр("Товары", ТЗТовары);
	
	ТЗТоварыИтог = Запрос.Выполнить().Выгрузить();
	
	СуммаДокументаБезНДС = 0;
	СуммаДокумента = 0;
	СуммаНДС = 0;
	КоличествоСтрокВТаблице = 0;
	
	Для Каждого Товар ИЗ ТЗТоварыИтог Цикл 
		
		СуммаДокументаБезНДС = СуммаДокументаБезНДС + Товар.СуммаБезНДС;
		СуммаДокумента = СуммаДокумента + Товар.СуммаСНДС;
		СуммаНДС = СуммаНДС + Товар.СуммаНДС; 
		КоличествоСтрокВТаблице = КоличествоСтрокВТаблице + 1;	
	КонецЦикла;
	ПараметрыПрописиНаРусском = "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
	
	стрВозврат = Новый Структура;
	стрВозврат.Вставить("Товары", ТЗТоварыИтог);
	стрВозврат.Вставить("СуммаДокументаБезНДС", Формат(СуммаДокументаБезНДС, "ЧДЦ=2"));
	стрВозврат.Вставить("СуммаДокументаБезНДСПрописью", ЧислоПрописью(СуммаДокументаБезНДС, ,ПараметрыПрописиНаРусском));
	стрВозврат.Вставить("СуммаДокумента", Формат(СуммаДокумента, "ЧДЦ=2"));
	стрВозврат.Вставить("СуммаДокументаПрописью", ЧислоПрописью(СуммаДокумента, ,ПараметрыПрописиНаРусском));
	стрВозврат.Вставить("СуммаНДСПрописью", ЧислоПрописью(СуммаНДС, ,ПараметрыПрописиНаРусском));
	стрВозврат.Вставить("СуммаНДС", Формат(СуммаНДС, "ЧДЦ=2"));
	стрВозврат.Вставить("КоличествоСтрокВТаблице", КоличествоСтрокВТаблице);
	
	//Добавляем пользовательские параметры
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаТендерПараметры.ИмяПараметра КАК ИмяПараметра,
	               |	ЗаявкаНаТендерПараметры.ЗначениеПараметра КАК ЗначениеПараметра
	               |ИЗ
	               |	Документ.ЗаявкаНаТендер.Параметры КАК ЗаявкаНаТендерПараметры
	               |ГДЕ
	               |	ЗаявкаНаТендерПараметры.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		стрВозврат.Вставить(Выборка.ИмяПараметра, Выборка.ЗначениеПараметра);	
	КонецЦикла;		
	Возврат стрВозврат;
КонецФункции // ПолучитьПараметрыДляЗаполненияПечатныхФорм()

Функция СформироватьПечатныеФормыДокументов(СсылкаДокумент, ИтоговаяСумма) Экспорт 
	ПараметрыПечати = ПолучитьПараметрыДляЗаполненияПечатныхФорм(СсылкаДокумент, ИтоговаяСумма);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользовательскиеМакетыПечати.ИмяМакета КАК ИмяМакета,
	               |	ПользовательскиеМакетыПечати.Объект КАК Объект,
	               |	ПользовательскиеМакетыПечати.ОбъектВладелец КАК ОбъектВладелец,
	               |	ПользовательскиеМакетыПечати.Макет КАК Макет,
	               |	ПользовательскиеМакетыПечати.Использование КАК Использование
	               |ИЗ
	               |	РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
	               |ГДЕ
	               |	ПользовательскиеМакетыПечати.Использование
	               |	И ПользовательскиеМакетыПечати.ОбъектВладелец = &ОбъектВладелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ИмяМакета";
	Запрос.УстановитьПараметр("ОбъектВладелец", СсылкаДокумент);
	Выборка = Запрос.Выполнить().Выбрать();
	МассивДокументов = Новый Массив;
	МассивПроверяемыхОбластей = Новый Массив;
	Пока Выборка.Следующий() Цикл 
		Макет = Выборка.Макет.Получить();
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявкаНаТендер_" + СсылкаДокумент.Номер + "_" + Выборка.ИмяМакета;
		ОбластьШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьШапкаДокумента.Параметры.Заполнить(ПараметрыПечати);
		ТабДок.Вывести(ОбластьШапкаДокумента);		
		
		ОбластьСтрокаТовара = Макет.Области.Найти("СтрокаТовара");
		Если Не ОбластьСтрокаТовара = Неопределено Тогда
			Для Каждого Товар ИЗ ПараметрыПечати.Товары Цикл   
				ОбластьСтрокаТовара = Макет.ПолучитьОбласть("СтрокаТовара");
				ОбластьСтрокаТовара.Параметры.Заполнить(Товар);
				Если НЕ ТабДок.ПроверитьВывод(ОбластьСтрокаТовара) Тогда
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
				КонецЕсли;
				ТабДок.Вывести(ОбластьСтрокаТовара);
			КонецЦикла;
			
			
			ОбластьИтог = Макет.ПолучитьОбласть("Итог");
			ОбластьИтог.Параметры.Заполнить(ПараметрыПечати);
			
			ОбластьПодвалДокумента = Макет.ПолучитьОбласть("ПодвалДокумента");
			ОбластьПодвалДокумента.Параметры.Заполнить(ПараметрыПечати);
			
			//МассивПроверяемыхОбластей.Очистить();
			//МассивПроверяемыхОбластей.Добавить(ОбластьИтог);
			//МассивПроверяемыхОбластей.Добавить(ОбластьПодвалДокумента);
			Если НЕ ТабДок.ПроверитьВывод(ОбластьИтог) Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
			КонецЕсли;
			ТабДок.Вывести(ОбластьИтог);
			
			Если НЕ ТабДок.ПроверитьВывод(ОбластьПодвалДокумента) Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
			КонецЕсли;			
			ТабДок.Вывести(ОбластьПодвалДокумента);		
		КонецЕсли;
		ТабДок.АвтоМасштаб = Истина;
		МассивДокументов.Добавить(Новый Структура("ИмяМакета, ТабДок", Выборка.ИмяМакета, ТабДок));
	КонецЦикла;
	
	Возврат МассивДокументов;	

КонецФункции // СформироватьПечатныеФормыДокументов()
